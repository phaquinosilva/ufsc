
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGRAMASSIGNMENT BREAK COMMA DEF DIFFERENT DIV ELSE EQUAL FLOAT FLOAT_CONSTANT FOR GREATEREQUAL GREATERTHAN IDENT IF INT INT_CONSTANT LBRACKET LCURLYBRACKET LESSEQUAL LESSTHAN LPARENTHESIS MINUS MOD MULT NEW NULL PLUS PRINT RBRACKET RCURLYBRACKET READ RETURN RPARENTHESIS SEMICOLON STRING STRING_CONSTANTempty :PROGRAM  : STATEMENT\n    | FUNCLIST\n    | emptyFUNCLIST : FUNCDEF FUNCLISTAUXFUNCLISTAUX  : FUNCLIST\n    | emptyFUNCDEF : DEF IDENT LPARENTHESIS PARAMLIST RPARENTHESIS LCURLYBRACKET STATELIST RCURLYBRACKETPARAMLIST    : DATATYPE IDENT PARAMLISTAUX\n    | emptyPARAMLISTAUX : COMMA PARAMLIST\n    | emptyDATATYPE : INT\n    | FLOAT\n    | STRINGSTATEMENT : VARDECL SEMICOLONSTATEMENT : ATRIBSTAT SEMICOLONSTATEMENT : PRINTSTAT SEMICOLONSTATEMENT : READSTAT SEMICOLONSTATEMENT : RETURNSTAT SEMICOLONSTATEMENT : IFSTAT SEMICOLONSTATEMENT : FORSTAT SEMICOLONSTATEMENT : LCURLYBRACKET STATELIST RCURLYBRACKETSTATEMENT    : BREAK SEMICOLON\n    | SEMICOLONVARDECL : DATATYPE IDENT OPTIONAL_VECOPTIONAL_VEC : LBRACKET INT_CONSTANT RBRACKET OPTIONAL_VEC\n    | emptyATRIBSTAT : LVALUE ASSIGNMENT RATRIBRATRIB   : EXPRESSION\n    | ALLOCEXPRESSION\n    | FUNCCALLFUNCCALL : IDENT LPARENTHESIS PARAMLISTCALL RPARENTHESISPARAMLISTCALL : IDENT PARAMLISTCALLAUXPARAMLISTCALLAUX : COMMA PARAMLISTCALL\n    | emptyPRINTSTAT : PRINT EXPRESSIONREADSTAT : READ LVALUERETURNSTAT : RETURNIFSTAT : IF LPARENTHESIS EXPRESSION RPARENTHESIS STATEMENT IFAUXIFAUX    : ELSE STATEMENT\n    | emptyFORSTAT : FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS STATEMENTSTATELIST : STATEMENT OPT_STATELISTOPT_STATELIST    : STATELIST\n    | emptyALLOCEXPRESSION : NEW DATATYPE LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSIONOPT_NUMEXPRESSION    : LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION\n    | emptyEXPRESSION : NUMEXPRESSION OPT_REL_OP_NUM_EXPRESSIONOPT_REL_OP_NUM_EXPRESSION    : REL_OP NUMEXPRESSION\n    | emptyREL_OP : LESSTHANREL_OP : GREATERTHANREL_OP : LESSEQUALREL_OP : GREATEREQUALREL_OP : EQUALREL_OP : DIFFERENTNUMEXPRESSION : TERM REC_PLUS_MINUS_TERMREC_PLUS_MINUS_TERM  : PLUS_OR_MINUS TERM REC_PLUS_MINUS_TERM\n    | emptyPLUS_OR_MINUS    : PLUS\n    | MINUSTERM : UNARYEXPR OPT_UNARYEXPROPT_UNARYEXPR    : OPERATOR UNARYEXPR\n    | emptyOPERATOR : MULT\n    | MOD\n    | DIVOPT_PLUS_MINUS   : PLUS_OR_MINUS\n    | emptyUNARYEXPR : OPT_PLUS_MINUS FACTORFACTOR   : INT_CONSTANT\n    | FLOAT_CONSTANT\n    | STRING_CONSTANT\n    | NULLFACTOR : LVALUEFACTOR : LPARENTHESIS NUMEXPRESSION RPARENTHESISLVALUE : IDENT OPT_NUMEXPRESSION'
    
_lr_action_items = {'LCURLYBRACKET':([0,6,13,28,29,30,31,32,33,34,36,37,59,109,123,132,135,146,],[13,-25,13,-16,-17,-18,-19,-20,-21,-22,13,-24,-23,13,135,13,13,13,]),'BREAK':([0,6,13,28,29,30,31,32,33,34,36,37,59,109,132,135,146,],[14,-25,14,-16,-17,-18,-19,-20,-21,-22,14,-24,-23,14,14,14,14,]),'SEMICOLON':([0,5,6,7,8,9,10,11,12,13,14,17,21,28,29,30,31,32,33,34,36,37,41,42,44,46,47,48,49,55,59,63,65,67,68,69,70,73,75,82,84,85,87,91,92,93,94,95,96,99,102,105,106,107,109,114,115,119,120,121,122,125,130,131,132,133,135,139,141,145,146,148,],[6,28,-25,29,30,31,32,33,34,6,37,-1,-39,-16,-17,-18,-19,-20,-21,-22,6,-24,-1,-79,-49,-37,-1,-1,-1,-38,-23,-26,-28,-29,-30,-31,-32,-50,-52,-59,-61,-64,-66,-72,-73,-74,-75,-76,-77,110,-1,-51,-1,-65,6,-1,-48,-60,-78,-1,134,-27,-33,-40,6,-42,6,-1,-41,-47,6,-43,]),'$end':([0,1,2,3,4,6,15,28,29,30,31,32,33,34,37,38,39,40,59,147,],[-1,0,-2,-3,-4,-25,-1,-16,-17,-18,-19,-20,-21,-22,-24,-5,-6,-7,-23,-8,]),'PRINT':([0,6,13,28,29,30,31,32,33,34,36,37,59,109,132,135,146,],[19,-25,19,-16,-17,-18,-19,-20,-21,-22,19,-24,-23,19,19,19,19,]),'READ':([0,6,13,28,29,30,31,32,33,34,36,37,59,109,132,135,146,],[20,-25,20,-16,-17,-18,-19,-20,-21,-22,20,-24,-23,20,20,20,20,]),'RETURN':([0,6,13,28,29,30,31,32,33,34,36,37,59,109,132,135,146,],[21,-25,21,-16,-17,-18,-19,-20,-21,-22,21,-24,-23,21,21,21,21,]),'IF':([0,6,13,28,29,30,31,32,33,34,36,37,59,109,132,135,146,],[22,-25,22,-16,-17,-18,-19,-20,-21,-22,22,-24,-23,22,22,22,22,]),'FOR':([0,6,13,28,29,30,31,32,33,34,36,37,59,109,132,135,146,],[23,-25,23,-16,-17,-18,-19,-20,-21,-22,23,-24,-23,23,23,23,23,]),'DEF':([0,15,147,],[24,24,-8,]),'INT':([0,6,13,28,29,30,31,32,33,34,36,37,59,71,100,109,132,135,137,146,],[25,-25,25,-16,-17,-18,-19,-20,-21,-22,25,-24,-23,25,25,25,25,25,25,25,]),'FLOAT':([0,6,13,28,29,30,31,32,33,34,36,37,59,71,100,109,132,135,137,146,],[26,-25,26,-16,-17,-18,-19,-20,-21,-22,26,-24,-23,26,26,26,26,26,26,26,]),'STRING':([0,6,13,28,29,30,31,32,33,34,36,37,59,71,100,109,132,135,137,146,],[27,-25,27,-16,-17,-18,-19,-20,-21,-22,27,-24,-23,27,27,27,27,27,27,27,]),'IDENT':([0,6,13,16,19,20,24,25,26,27,28,29,30,31,32,33,34,36,37,43,45,50,51,52,53,54,56,57,59,74,76,77,78,79,80,81,83,86,88,89,90,97,104,109,110,112,116,128,132,134,135,146,],[17,-25,17,41,-1,17,58,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,17,-24,-1,72,17,-70,-71,-62,-63,-1,17,-23,-1,-53,-54,-55,-56,-57,-58,-1,-1,-67,-68,-69,-1,117,17,-1,124,-1,117,17,17,17,17,]),'RCURLYBRACKET':([6,28,29,30,31,32,33,34,35,36,37,59,60,61,62,143,],[-25,-16,-17,-18,-19,-20,-21,-22,59,-1,-24,-23,-44,-45,-46,147,]),'ELSE':([6,28,29,30,31,32,33,34,37,59,121,],[-25,-16,-17,-18,-19,-20,-21,-22,-24,-23,132,]),'LBRACKET':([17,25,26,27,41,102,103,114,139,],[43,-13,-14,-15,64,43,116,64,43,]),'ASSIGNMENT':([17,18,42,44,102,115,],[-1,45,-79,-49,-1,-48,]),'MULT':([17,42,44,49,91,92,93,94,95,96,102,115,120,],[-1,-79,-49,88,-72,-73,-74,-75,-76,-77,-1,-48,-78,]),'MOD':([17,42,44,49,91,92,93,94,95,96,102,115,120,],[-1,-79,-49,89,-72,-73,-74,-75,-76,-77,-1,-48,-78,]),'DIV':([17,42,44,49,91,92,93,94,95,96,102,115,120,],[-1,-79,-49,90,-72,-73,-74,-75,-76,-77,-1,-48,-78,]),'PLUS':([17,19,42,43,44,45,48,49,53,54,56,74,76,77,78,79,80,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,102,106,107,110,115,116,120,],[-1,53,-79,53,-49,53,53,-1,-62,-63,53,53,-53,-54,-55,-56,-57,-58,53,-64,53,-66,-67,-68,-69,-72,-73,-74,-75,-76,-77,53,-1,53,-65,53,-48,53,-78,]),'MINUS':([17,19,42,43,44,45,48,49,53,54,56,74,76,77,78,79,80,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,102,106,107,110,115,116,120,],[-1,54,-79,54,-49,54,54,-1,-62,-63,54,54,-53,-54,-55,-56,-57,-58,54,-64,54,-66,-67,-68,-69,-72,-73,-74,-75,-76,-77,54,-1,54,-65,54,-48,54,-78,]),'LESSTHAN':([17,42,44,47,48,49,82,84,85,87,91,92,93,94,95,96,102,106,107,115,119,120,],[-1,-79,-49,76,-1,-1,-59,-61,-64,-66,-72,-73,-74,-75,-76,-77,-1,-1,-65,-48,-60,-78,]),'GREATERTHAN':([17,42,44,47,48,49,82,84,85,87,91,92,93,94,95,96,102,106,107,115,119,120,],[-1,-79,-49,77,-1,-1,-59,-61,-64,-66,-72,-73,-74,-75,-76,-77,-1,-1,-65,-48,-60,-78,]),'LESSEQUAL':([17,42,44,47,48,49,82,84,85,87,91,92,93,94,95,96,102,106,107,115,119,120,],[-1,-79,-49,78,-1,-1,-59,-61,-64,-66,-72,-73,-74,-75,-76,-77,-1,-1,-65,-48,-60,-78,]),'GREATEREQUAL':([17,42,44,47,48,49,82,84,85,87,91,92,93,94,95,96,102,106,107,115,119,120,],[-1,-79,-49,79,-1,-1,-59,-61,-64,-66,-72,-73,-74,-75,-76,-77,-1,-1,-65,-48,-60,-78,]),'EQUAL':([17,42,44,47,48,49,82,84,85,87,91,92,93,94,95,96,102,106,107,115,119,120,],[-1,-79,-49,80,-1,-1,-59,-61,-64,-66,-72,-73,-74,-75,-76,-77,-1,-1,-65,-48,-60,-78,]),'DIFFERENT':([17,42,44,47,48,49,82,84,85,87,91,92,93,94,95,96,102,106,107,115,119,120,],[-1,-79,-49,81,-1,-1,-59,-61,-64,-66,-72,-73,-74,-75,-76,-77,-1,-1,-65,-48,-60,-78,]),'RBRACKET':([17,42,44,48,49,66,82,84,85,87,91,92,93,94,95,96,101,102,106,107,115,119,120,126,],[-1,-79,-49,-1,-1,102,-59,-61,-64,-66,-72,-73,-74,-75,-76,-77,114,-1,-1,-65,-48,-60,-78,139,]),'RPARENTHESIS':([17,42,44,47,48,49,67,68,69,70,73,75,82,84,85,87,91,92,93,94,95,96,98,100,102,105,106,107,108,111,113,115,117,118,119,120,124,127,129,130,136,137,138,139,140,142,144,145,],[-1,-79,-49,-1,-1,-1,-29,-30,-31,-32,-50,-52,-59,-61,-64,-66,-72,-73,-74,-75,-76,-77,109,-1,-1,-51,-1,-65,120,123,-10,-48,-1,130,-60,-78,-1,-34,-36,-33,-9,-1,-12,-1,-35,146,-11,-47,]),'INT_CONSTANT':([19,43,45,50,51,52,53,54,56,64,74,76,77,78,79,80,81,83,86,88,89,90,97,110,116,],[-1,-1,-1,92,-70,-71,-62,-63,-1,101,-1,-53,-54,-55,-56,-57,-58,-1,-1,-67,-68,-69,-1,-1,-1,]),'FLOAT_CONSTANT':([19,43,45,50,51,52,53,54,56,74,76,77,78,79,80,81,83,86,88,89,90,97,110,116,],[-1,-1,-1,93,-70,-71,-62,-63,-1,-1,-53,-54,-55,-56,-57,-58,-1,-1,-67,-68,-69,-1,-1,-1,]),'STRING_CONSTANT':([19,43,45,50,51,52,53,54,56,74,76,77,78,79,80,81,83,86,88,89,90,97,110,116,],[-1,-1,-1,94,-70,-71,-62,-63,-1,-1,-53,-54,-55,-56,-57,-58,-1,-1,-67,-68,-69,-1,-1,-1,]),'NULL':([19,43,45,50,51,52,53,54,56,74,76,77,78,79,80,81,83,86,88,89,90,97,110,116,],[-1,-1,-1,95,-70,-71,-62,-63,-1,-1,-53,-54,-55,-56,-57,-58,-1,-1,-67,-68,-69,-1,-1,-1,]),'LPARENTHESIS':([19,22,23,43,45,50,51,52,53,54,56,58,72,74,76,77,78,79,80,81,83,86,88,89,90,97,110,116,],[-1,56,57,-1,-1,97,-70,-71,-62,-63,-1,100,104,-1,-53,-54,-55,-56,-57,-58,-1,-1,-67,-68,-69,-1,-1,-1,]),'NEW':([45,],[71,]),'COMMA':([117,124,],[128,137,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'STATEMENT':([0,13,36,109,132,135,146,],[2,36,36,121,141,36,148,]),'FUNCLIST':([0,15,],[3,39,]),'empty':([0,15,17,19,36,41,43,45,47,48,49,56,74,83,86,97,100,102,106,110,114,116,117,121,124,137,139,],[4,40,44,52,62,65,52,52,75,84,87,52,52,52,52,52,113,44,84,52,65,52,129,133,138,113,44,]),'VARDECL':([0,13,36,109,132,135,146,],[5,5,5,5,5,5,5,]),'ATRIBSTAT':([0,13,36,57,109,132,134,135,146,],[7,7,7,99,7,7,142,7,7,]),'PRINTSTAT':([0,13,36,109,132,135,146,],[8,8,8,8,8,8,8,]),'READSTAT':([0,13,36,109,132,135,146,],[9,9,9,9,9,9,9,]),'RETURNSTAT':([0,13,36,109,132,135,146,],[10,10,10,10,10,10,10,]),'IFSTAT':([0,13,36,109,132,135,146,],[11,11,11,11,11,11,11,]),'FORSTAT':([0,13,36,109,132,135,146,],[12,12,12,12,12,12,12,]),'FUNCDEF':([0,15,],[15,15,]),'DATATYPE':([0,13,36,71,100,109,132,135,137,146,],[16,16,16,103,112,16,16,16,112,16,]),'LVALUE':([0,13,20,36,50,57,109,132,134,135,146,],[18,18,55,18,96,18,18,18,18,18,18,]),'STATELIST':([13,36,135,],[35,61,143,]),'FUNCLISTAUX':([15,],[38,]),'OPT_NUMEXPRESSION':([17,102,139,],[42,115,145,]),'EXPRESSION':([19,45,56,110,],[46,68,98,122,]),'NUMEXPRESSION':([19,43,45,56,74,97,110,116,],[47,66,47,47,105,108,47,126,]),'TERM':([19,43,45,56,74,83,97,110,116,],[48,48,48,48,48,106,48,48,48,]),'UNARYEXPR':([19,43,45,56,74,83,86,97,110,116,],[49,49,49,49,49,49,107,49,49,49,]),'OPT_PLUS_MINUS':([19,43,45,56,74,83,86,97,110,116,],[50,50,50,50,50,50,50,50,50,50,]),'PLUS_OR_MINUS':([19,43,45,48,56,74,83,86,97,106,110,116,],[51,51,51,83,51,51,51,51,51,83,51,51,]),'OPT_STATELIST':([36,],[60,]),'OPTIONAL_VEC':([41,114,],[63,125,]),'RATRIB':([45,],[67,]),'ALLOCEXPRESSION':([45,],[69,]),'FUNCCALL':([45,],[70,]),'OPT_REL_OP_NUM_EXPRESSION':([47,],[73,]),'REL_OP':([47,],[74,]),'REC_PLUS_MINUS_TERM':([48,106,],[82,119,]),'OPT_UNARYEXPR':([49,],[85,]),'OPERATOR':([49,],[86,]),'FACTOR':([50,],[91,]),'PARAMLIST':([100,137,],[111,144,]),'PARAMLISTCALL':([104,128,],[118,140,]),'PARAMLISTCALLAUX':([117,],[127,]),'IFAUX':([121,],[131,]),'PARAMLISTAUX':([124,],[136,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','syntactic_analyser.py',18),
  ('PROGRAM -> STATEMENT','PROGRAM',1,'p_prog_statement','syntactic_analyser.py',23),
  ('PROGRAM -> FUNCLIST','PROGRAM',1,'p_prog_statement','syntactic_analyser.py',24),
  ('PROGRAM -> empty','PROGRAM',1,'p_prog_statement','syntactic_analyser.py',25),
  ('FUNCLIST -> FUNCDEF FUNCLISTAUX','FUNCLIST',2,'p_funclist','syntactic_analyser.py',30),
  ('FUNCLISTAUX -> FUNCLIST','FUNCLISTAUX',1,'p_funclistaux','syntactic_analyser.py',35),
  ('FUNCLISTAUX -> empty','FUNCLISTAUX',1,'p_funclistaux','syntactic_analyser.py',36),
  ('FUNCDEF -> DEF IDENT LPARENTHESIS PARAMLIST RPARENTHESIS LCURLYBRACKET STATELIST RCURLYBRACKET','FUNCDEF',8,'p_fundef','syntactic_analyser.py',41),
  ('PARAMLIST -> DATATYPE IDENT PARAMLISTAUX','PARAMLIST',3,'p_paramlist','syntactic_analyser.py',46),
  ('PARAMLIST -> empty','PARAMLIST',1,'p_paramlist','syntactic_analyser.py',47),
  ('PARAMLISTAUX -> COMMA PARAMLIST','PARAMLISTAUX',2,'p_paramlist_aux','syntactic_analyser.py',52),
  ('PARAMLISTAUX -> empty','PARAMLISTAUX',1,'p_paramlist_aux','syntactic_analyser.py',53),
  ('DATATYPE -> INT','DATATYPE',1,'p_datatype','syntactic_analyser.py',58),
  ('DATATYPE -> FLOAT','DATATYPE',1,'p_datatype','syntactic_analyser.py',59),
  ('DATATYPE -> STRING','DATATYPE',1,'p_datatype','syntactic_analyser.py',60),
  ('STATEMENT -> VARDECL SEMICOLON','STATEMENT',2,'p_statement_vardecl','syntactic_analyser.py',65),
  ('STATEMENT -> ATRIBSTAT SEMICOLON','STATEMENT',2,'p_statement_atrib','syntactic_analyser.py',70),
  ('STATEMENT -> PRINTSTAT SEMICOLON','STATEMENT',2,'p_statement_print','syntactic_analyser.py',75),
  ('STATEMENT -> READSTAT SEMICOLON','STATEMENT',2,'p_statement_read','syntactic_analyser.py',80),
  ('STATEMENT -> RETURNSTAT SEMICOLON','STATEMENT',2,'p_statement_return','syntactic_analyser.py',85),
  ('STATEMENT -> IFSTAT SEMICOLON','STATEMENT',2,'p_statement_if','syntactic_analyser.py',90),
  ('STATEMENT -> FORSTAT SEMICOLON','STATEMENT',2,'p_statement_for','syntactic_analyser.py',95),
  ('STATEMENT -> LCURLYBRACKET STATELIST RCURLYBRACKET','STATEMENT',3,'p_statement_state','syntactic_analyser.py',100),
  ('STATEMENT -> BREAK SEMICOLON','STATEMENT',2,'p_statement_term','syntactic_analyser.py',105),
  ('STATEMENT -> SEMICOLON','STATEMENT',1,'p_statement_term','syntactic_analyser.py',106),
  ('VARDECL -> DATATYPE IDENT OPTIONAL_VEC','VARDECL',3,'p_vardecl','syntactic_analyser.py',111),
  ('OPTIONAL_VEC -> LBRACKET INT_CONSTANT RBRACKET OPTIONAL_VEC','OPTIONAL_VEC',4,'p_optional_vec','syntactic_analyser.py',116),
  ('OPTIONAL_VEC -> empty','OPTIONAL_VEC',1,'p_optional_vec','syntactic_analyser.py',117),
  ('ATRIBSTAT -> LVALUE ASSIGNMENT RATRIB','ATRIBSTAT',3,'p_atribstat','syntactic_analyser.py',122),
  ('RATRIB -> EXPRESSION','RATRIB',1,'p_ratrib','syntactic_analyser.py',127),
  ('RATRIB -> ALLOCEXPRESSION','RATRIB',1,'p_ratrib','syntactic_analyser.py',128),
  ('RATRIB -> FUNCCALL','RATRIB',1,'p_ratrib','syntactic_analyser.py',129),
  ('FUNCCALL -> IDENT LPARENTHESIS PARAMLISTCALL RPARENTHESIS','FUNCCALL',4,'p_funccall','syntactic_analyser.py',134),
  ('PARAMLISTCALL -> IDENT PARAMLISTCALLAUX','PARAMLISTCALL',2,'p_paramlistcall','syntactic_analyser.py',139),
  ('PARAMLISTCALLAUX -> COMMA PARAMLISTCALL','PARAMLISTCALLAUX',2,'p_paramlistcall_aux','syntactic_analyser.py',144),
  ('PARAMLISTCALLAUX -> empty','PARAMLISTCALLAUX',1,'p_paramlistcall_aux','syntactic_analyser.py',145),
  ('PRINTSTAT -> PRINT EXPRESSION','PRINTSTAT',2,'p_printstat','syntactic_analyser.py',150),
  ('READSTAT -> READ LVALUE','READSTAT',2,'p_readstat','syntactic_analyser.py',155),
  ('RETURNSTAT -> RETURN','RETURNSTAT',1,'p_returnstat','syntactic_analyser.py',160),
  ('IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS STATEMENT IFAUX','IFSTAT',6,'p_ifstat','syntactic_analyser.py',165),
  ('IFAUX -> ELSE STATEMENT','IFAUX',2,'p_ifaux','syntactic_analyser.py',170),
  ('IFAUX -> empty','IFAUX',1,'p_ifaux','syntactic_analyser.py',171),
  ('FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS STATEMENT','FORSTAT',9,'p_forstat','syntactic_analyser.py',176),
  ('STATELIST -> STATEMENT OPT_STATELIST','STATELIST',2,'p_statelist','syntactic_analyser.py',181),
  ('OPT_STATELIST -> STATELIST','OPT_STATELIST',1,'p_opt_statelist','syntactic_analyser.py',186),
  ('OPT_STATELIST -> empty','OPT_STATELIST',1,'p_opt_statelist','syntactic_analyser.py',187),
  ('ALLOCEXPRESSION -> NEW DATATYPE LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION','ALLOCEXPRESSION',6,'p_allocexp','syntactic_analyser.py',192),
  ('OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION','OPT_NUMEXPRESSION',4,'p_opt_numexpression','syntactic_analyser.py',197),
  ('OPT_NUMEXPRESSION -> empty','OPT_NUMEXPRESSION',1,'p_opt_numexpression','syntactic_analyser.py',198),
  ('EXPRESSION -> NUMEXPRESSION OPT_REL_OP_NUM_EXPRESSION','EXPRESSION',2,'p_expression','syntactic_analyser.py',203),
  ('OPT_REL_OP_NUM_EXPRESSION -> REL_OP NUMEXPRESSION','OPT_REL_OP_NUM_EXPRESSION',2,'p_opt_rel_op_num_expression','syntactic_analyser.py',208),
  ('OPT_REL_OP_NUM_EXPRESSION -> empty','OPT_REL_OP_NUM_EXPRESSION',1,'p_opt_rel_op_num_expression','syntactic_analyser.py',209),
  ('REL_OP -> LESSTHAN','REL_OP',1,'p_relop_lt','syntactic_analyser.py',214),
  ('REL_OP -> GREATERTHAN','REL_OP',1,'p_relop_gt','syntactic_analyser.py',219),
  ('REL_OP -> LESSEQUAL','REL_OP',1,'p_relop_lte','syntactic_analyser.py',224),
  ('REL_OP -> GREATEREQUAL','REL_OP',1,'p_relop_gte','syntactic_analyser.py',229),
  ('REL_OP -> EQUAL','REL_OP',1,'p_relop_eq','syntactic_analyser.py',234),
  ('REL_OP -> DIFFERENT','REL_OP',1,'p_relop_neq','syntactic_analyser.py',239),
  ('NUMEXPRESSION -> TERM REC_PLUS_MINUS_TERM','NUMEXPRESSION',2,'p_numexpression','syntactic_analyser.py',244),
  ('REC_PLUS_MINUS_TERM -> PLUS_OR_MINUS TERM REC_PLUS_MINUS_TERM','REC_PLUS_MINUS_TERM',3,'p_rec_plus_minus_term','syntactic_analyser.py',249),
  ('REC_PLUS_MINUS_TERM -> empty','REC_PLUS_MINUS_TERM',1,'p_rec_plus_minus_term','syntactic_analyser.py',250),
  ('PLUS_OR_MINUS -> PLUS','PLUS_OR_MINUS',1,'p_plus_or_minus','syntactic_analyser.py',255),
  ('PLUS_OR_MINUS -> MINUS','PLUS_OR_MINUS',1,'p_plus_or_minus','syntactic_analyser.py',256),
  ('TERM -> UNARYEXPR OPT_UNARYEXPR','TERM',2,'p_term','syntactic_analyser.py',261),
  ('OPT_UNARYEXPR -> OPERATOR UNARYEXPR','OPT_UNARYEXPR',2,'p_opt_unary_expr','syntactic_analyser.py',266),
  ('OPT_UNARYEXPR -> empty','OPT_UNARYEXPR',1,'p_opt_unary_expr','syntactic_analyser.py',267),
  ('OPERATOR -> MULT','OPERATOR',1,'p_operator','syntactic_analyser.py',272),
  ('OPERATOR -> MOD','OPERATOR',1,'p_operator','syntactic_analyser.py',273),
  ('OPERATOR -> DIV','OPERATOR',1,'p_operator','syntactic_analyser.py',274),
  ('OPT_PLUS_MINUS -> PLUS_OR_MINUS','OPT_PLUS_MINUS',1,'p_opt_plus_or_minus','syntactic_analyser.py',279),
  ('OPT_PLUS_MINUS -> empty','OPT_PLUS_MINUS',1,'p_opt_plus_or_minus','syntactic_analyser.py',280),
  ('UNARYEXPR -> OPT_PLUS_MINUS FACTOR','UNARYEXPR',2,'p_unary_exp','syntactic_analyser.py',285),
  ('FACTOR -> INT_CONSTANT','FACTOR',1,'p_factor_const','syntactic_analyser.py',290),
  ('FACTOR -> FLOAT_CONSTANT','FACTOR',1,'p_factor_const','syntactic_analyser.py',291),
  ('FACTOR -> STRING_CONSTANT','FACTOR',1,'p_factor_const','syntactic_analyser.py',292),
  ('FACTOR -> NULL','FACTOR',1,'p_factor_const','syntactic_analyser.py',293),
  ('FACTOR -> LVALUE','FACTOR',1,'p_factor_lvalue','syntactic_analyser.py',298),
  ('FACTOR -> LPARENTHESIS NUMEXPRESSION RPARENTHESIS','FACTOR',3,'p_factor_numexpression','syntactic_analyser.py',303),
  ('LVALUE -> IDENT OPT_NUMEXPRESSION','LVALUE',2,'p_lvalue','syntactic_analyser.py',308),
]
