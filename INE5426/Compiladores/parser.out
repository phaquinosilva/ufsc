Created by PLY (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     empty -> <empty>
Rule 2     new_scope -> <empty>
Rule 3     new_scope_loop -> <empty>
Rule 4     PROGRAM -> new_scope STATEMENT
Rule 5     PROGRAM -> new_scope FUNCLIST
Rule 6     PROGRAM -> empty
Rule 7     FUNCLIST -> FUNCDEF FUNCLISTAUX
Rule 8     FUNCLISTAUX -> FUNCLIST
Rule 9     FUNCLISTAUX -> empty
Rule 10    FUNCDEF -> DEF IDENT new_scope LPARENTHESIS PARAMLIST RPARENTHESIS LCURLYBRACKET STATELIST RCURLYBRACKET
Rule 11    PARAMLIST -> DATATYPE IDENT PARAMLISTAUX
Rule 12    PARAMLIST -> empty
Rule 13    PARAMLISTAUX -> COMMA PARAMLIST
Rule 14    PARAMLISTAUX -> empty
Rule 15    DATATYPE -> INT
Rule 16    DATATYPE -> FLOAT
Rule 17    DATATYPE -> STRING
Rule 18    STATEMENT -> VARDECL SEMICOLON
Rule 19    STATEMENT -> ATRIBSTAT SEMICOLON
Rule 20    STATEMENT -> PRINTSTAT SEMICOLON
Rule 21    STATEMENT -> READSTAT SEMICOLON
Rule 22    STATEMENT -> RETURNSTAT SEMICOLON
Rule 23    STATEMENT -> IFSTAT
Rule 24    STATEMENT -> FORSTAT
Rule 25    STATEMENT -> new_scope LCURLYBRACKET STATELIST RCURLYBRACKET
Rule 26    STATEMENT -> BREAK SEMICOLON
Rule 27    STATEMENT -> SEMICOLON
Rule 28    VARDECL -> DATATYPE IDENT OPTIONAL_VEC
Rule 29    OPTIONAL_VEC -> LBRACKET INT_CONSTANT RBRACKET OPTIONAL_VEC
Rule 30    OPTIONAL_VEC -> empty
Rule 31    ATRIBSTAT -> LVALUE ASSIGNMENT R_ATRIB
Rule 32    R_ATRIB -> EXPRESSION
Rule 33    R_ATRIB -> ALLOCEXPRESSION
Rule 34    R_ATRIB -> FUNCCALL
Rule 35    FUNCCALL -> IDENT LPARENTHESIS PARAMLISTCALL RPARENTHESIS
Rule 36    PARAMLISTCALL -> IDENT PARAMLISTCALLAUX
Rule 37    PARAMLISTCALLAUX -> COMMA PARAMLISTCALL
Rule 38    PARAMLISTCALLAUX -> empty
Rule 39    PRINTSTAT -> PRINT EXPRESSION
Rule 40    READSTAT -> READ LVALUE
Rule 41    RETURNSTAT -> RETURN
Rule 42    IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX
Rule 43    IFAUX -> ELSE new_scope STATEMENT
Rule 44    IFAUX -> empty
Rule 45    FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT
Rule 46    STATELIST -> STATEMENT OPT_STATELIST
Rule 47    OPT_STATELIST -> STATELIST
Rule 48    OPT_STATELIST -> empty
Rule 49    ALLOCEXPRESSION -> NEW DATATYPE LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION
Rule 50    OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION
Rule 51    OPT_NUMEXPRESSION -> empty
Rule 52    EXPRESSION -> NUMEXPRESSION OPT_EXPRESSION
Rule 53    OPT_EXPRESSION -> REL_OP NUMEXPRESSION
Rule 54    OPT_EXPRESSION -> empty
Rule 55    REL_OP -> LESSTHAN
Rule 56    REL_OP -> GREATERTHAN
Rule 57    REL_OP -> LESSEQUAL
Rule 58    REL_OP -> GREATEREQUAL
Rule 59    REL_OP -> EQUAL
Rule 60    REL_OP -> DIFFERENT
Rule 61    NUMEXPRESSION -> TERM OTHERTERM
Rule 62    OTHERTERM -> PLUS_OR_MINUS TERM OTHERTERM
Rule 63    OTHERTERM -> empty
Rule 64    PLUS_OR_MINUS -> PLUS
Rule 65    PLUS_OR_MINUS -> MINUS
Rule 66    TERM -> UNARYEXPR OPT_UNARYEXPR
Rule 67    OPT_UNARYEXPR -> OPERATOR UNARYEXPR OPT_UNARYEXPR
Rule 68    OPT_UNARYEXPR -> empty
Rule 69    OPERATOR -> MULT
Rule 70    OPERATOR -> MOD
Rule 71    OPERATOR -> DIV
Rule 72    UNARYEXPR -> PLUS_OR_MINUS FACTOR
Rule 73    UNARYEXPR -> FACTOR
Rule 74    FACTOR -> INT_CONSTANT
Rule 75    FACTOR -> FLOAT_CONSTANT
Rule 76    FACTOR -> STRING_CONSTANT
Rule 77    FACTOR -> NULL
Rule 78    FACTOR -> LVALUE
Rule 79    FACTOR -> LPARENTHESIS NUMEXPRESSION RPARENTHESIS
Rule 80    LVALUE -> IDENT OPT_NUMEXPRESSION

Terminals, with rules where they appear

ASSIGNMENT           : 31
BREAK                : 26
COMMA                : 13 37
DEF                  : 10
DIFFERENT            : 60
DIV                  : 71
ELSE                 : 43
EQUAL                : 59
FLOAT                : 16
FLOAT_CONSTANT       : 75
FOR                  : 45
GREATEREQUAL         : 58
GREATERTHAN          : 56
IDENT                : 10 11 28 35 36 80
IF                   : 42
INT                  : 15
INT_CONSTANT         : 29 74
LBRACKET             : 29 49 50
LCURLYBRACKET        : 10 25
LESSEQUAL            : 57
LESSTHAN             : 55
LPARENTHESIS         : 10 35 42 45 79
MINUS                : 65
MOD                  : 70
MULT                 : 69
NEW                  : 49
NULL                 : 77
PLUS                 : 64
PRINT                : 39
RBRACKET             : 29 49 50
RCURLYBRACKET        : 10 25
READ                 : 40
RETURN               : 41
RPARENTHESIS         : 10 35 42 45 79
SEMICOLON            : 18 19 20 21 22 26 27 45 45
STRING               : 17
STRING_CONSTANT      : 76
error                : 

Nonterminals, with rules where they appear

ALLOCEXPRESSION      : 33
ATRIBSTAT            : 19 45 45
DATATYPE             : 11 28 49
EXPRESSION           : 32 39 42 45
FACTOR               : 72 73
FORSTAT              : 24
FUNCCALL             : 34
FUNCDEF              : 7
FUNCLIST             : 5 8
FUNCLISTAUX          : 7
IFAUX                : 42
IFSTAT               : 23
LVALUE               : 31 40 78
NUMEXPRESSION        : 49 50 52 53 79
OPERATOR             : 67
OPTIONAL_VEC         : 28 29
OPT_EXPRESSION       : 52
OPT_NUMEXPRESSION    : 49 50 80
OPT_STATELIST        : 46
OPT_UNARYEXPR        : 66 67
OTHERTERM            : 61 62
PARAMLIST            : 10 13
PARAMLISTAUX         : 11
PARAMLISTCALL        : 35 37
PARAMLISTCALLAUX     : 36
PLUS_OR_MINUS        : 62 72
PRINTSTAT            : 20
PROGRAM              : 0
READSTAT             : 21
REL_OP               : 53
RETURNSTAT           : 22
R_ATRIB              : 31
STATELIST            : 10 25 47
STATEMENT            : 4 42 43 45 46
TERM                 : 61 62
UNARYEXPR            : 66 67
VARDECL              : 18
empty                : 6 9 12 14 30 38 44 48 51 54 63 68
new_scope            : 4 5 10 25 42 43
new_scope_loop       : 45


state 0

    (0) S' -> . PROGRAM
    (4) PROGRAM -> . new_scope STATEMENT
    (5) PROGRAM -> . new_scope FUNCLIST
    (6) PROGRAM -> . empty
    (2) new_scope -> .
    (1) empty -> .

    BREAK           reduce using rule 2 (new_scope -> .)
    SEMICOLON       reduce using rule 2 (new_scope -> .)
    PRINT           reduce using rule 2 (new_scope -> .)
    READ            reduce using rule 2 (new_scope -> .)
    RETURN          reduce using rule 2 (new_scope -> .)
    IF              reduce using rule 2 (new_scope -> .)
    FOR             reduce using rule 2 (new_scope -> .)
    DEF             reduce using rule 2 (new_scope -> .)
    INT             reduce using rule 2 (new_scope -> .)
    FLOAT           reduce using rule 2 (new_scope -> .)
    STRING          reduce using rule 2 (new_scope -> .)
    IDENT           reduce using rule 2 (new_scope -> .)
    LCURLYBRACKET   reduce using rule 2 (new_scope -> .)
    $end            reduce using rule 1 (empty -> .)

    PROGRAM                        shift and go to state 1
    new_scope                      shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> PROGRAM .



state 2

    (4) PROGRAM -> new_scope . STATEMENT
    (5) PROGRAM -> new_scope . FUNCLIST
    (18) STATEMENT -> . VARDECL SEMICOLON
    (19) STATEMENT -> . ATRIBSTAT SEMICOLON
    (20) STATEMENT -> . PRINTSTAT SEMICOLON
    (21) STATEMENT -> . READSTAT SEMICOLON
    (22) STATEMENT -> . RETURNSTAT SEMICOLON
    (23) STATEMENT -> . IFSTAT
    (24) STATEMENT -> . FORSTAT
    (25) STATEMENT -> . new_scope LCURLYBRACKET STATELIST RCURLYBRACKET
    (26) STATEMENT -> . BREAK SEMICOLON
    (27) STATEMENT -> . SEMICOLON
    (7) FUNCLIST -> . FUNCDEF FUNCLISTAUX
    (28) VARDECL -> . DATATYPE IDENT OPTIONAL_VEC
    (31) ATRIBSTAT -> . LVALUE ASSIGNMENT R_ATRIB
    (39) PRINTSTAT -> . PRINT EXPRESSION
    (40) READSTAT -> . READ LVALUE
    (41) RETURNSTAT -> . RETURN
    (42) IFSTAT -> . IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX
    (45) FORSTAT -> . FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT
    (2) new_scope -> .
    (10) FUNCDEF -> . DEF IDENT new_scope LPARENTHESIS PARAMLIST RPARENTHESIS LCURLYBRACKET STATELIST RCURLYBRACKET
    (15) DATATYPE -> . INT
    (16) DATATYPE -> . FLOAT
    (17) DATATYPE -> . STRING
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    BREAK           shift and go to state 15
    SEMICOLON       shift and go to state 8
    PRINT           shift and go to state 20
    READ            shift and go to state 21
    RETURN          shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    LCURLYBRACKET   reduce using rule 2 (new_scope -> .)
    DEF             shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENT           shift and go to state 18

    new_scope                      shift and go to state 4
    STATEMENT                      shift and go to state 5
    FUNCLIST                       shift and go to state 6
    VARDECL                        shift and go to state 7
    ATRIBSTAT                      shift and go to state 9
    PRINTSTAT                      shift and go to state 10
    READSTAT                       shift and go to state 11
    RETURNSTAT                     shift and go to state 12
    IFSTAT                         shift and go to state 13
    FORSTAT                        shift and go to state 14
    FUNCDEF                        shift and go to state 16
    DATATYPE                       shift and go to state 17
    LVALUE                         shift and go to state 19

state 3

    (6) PROGRAM -> empty .

    $end            reduce using rule 6 (PROGRAM -> empty .)


state 4

    (25) STATEMENT -> new_scope . LCURLYBRACKET STATELIST RCURLYBRACKET

    LCURLYBRACKET   shift and go to state 29


state 5

    (4) PROGRAM -> new_scope STATEMENT .

    $end            reduce using rule 4 (PROGRAM -> new_scope STATEMENT .)


state 6

    (5) PROGRAM -> new_scope FUNCLIST .

    $end            reduce using rule 5 (PROGRAM -> new_scope FUNCLIST .)


state 7

    (18) STATEMENT -> VARDECL . SEMICOLON

    SEMICOLON       shift and go to state 30


state 8

    (27) STATEMENT -> SEMICOLON .

    $end            reduce using rule 27 (STATEMENT -> SEMICOLON .)
    BREAK           reduce using rule 27 (STATEMENT -> SEMICOLON .)
    SEMICOLON       reduce using rule 27 (STATEMENT -> SEMICOLON .)
    PRINT           reduce using rule 27 (STATEMENT -> SEMICOLON .)
    READ            reduce using rule 27 (STATEMENT -> SEMICOLON .)
    RETURN          reduce using rule 27 (STATEMENT -> SEMICOLON .)
    IF              reduce using rule 27 (STATEMENT -> SEMICOLON .)
    FOR             reduce using rule 27 (STATEMENT -> SEMICOLON .)
    INT             reduce using rule 27 (STATEMENT -> SEMICOLON .)
    FLOAT           reduce using rule 27 (STATEMENT -> SEMICOLON .)
    STRING          reduce using rule 27 (STATEMENT -> SEMICOLON .)
    IDENT           reduce using rule 27 (STATEMENT -> SEMICOLON .)
    LCURLYBRACKET   reduce using rule 27 (STATEMENT -> SEMICOLON .)
    RCURLYBRACKET   reduce using rule 27 (STATEMENT -> SEMICOLON .)
    ELSE            reduce using rule 27 (STATEMENT -> SEMICOLON .)


state 9

    (19) STATEMENT -> ATRIBSTAT . SEMICOLON

    SEMICOLON       shift and go to state 31


state 10

    (20) STATEMENT -> PRINTSTAT . SEMICOLON

    SEMICOLON       shift and go to state 32


state 11

    (21) STATEMENT -> READSTAT . SEMICOLON

    SEMICOLON       shift and go to state 33


state 12

    (22) STATEMENT -> RETURNSTAT . SEMICOLON

    SEMICOLON       shift and go to state 34


state 13

    (23) STATEMENT -> IFSTAT .

    $end            reduce using rule 23 (STATEMENT -> IFSTAT .)
    BREAK           reduce using rule 23 (STATEMENT -> IFSTAT .)
    SEMICOLON       reduce using rule 23 (STATEMENT -> IFSTAT .)
    PRINT           reduce using rule 23 (STATEMENT -> IFSTAT .)
    READ            reduce using rule 23 (STATEMENT -> IFSTAT .)
    RETURN          reduce using rule 23 (STATEMENT -> IFSTAT .)
    IF              reduce using rule 23 (STATEMENT -> IFSTAT .)
    FOR             reduce using rule 23 (STATEMENT -> IFSTAT .)
    INT             reduce using rule 23 (STATEMENT -> IFSTAT .)
    FLOAT           reduce using rule 23 (STATEMENT -> IFSTAT .)
    STRING          reduce using rule 23 (STATEMENT -> IFSTAT .)
    IDENT           reduce using rule 23 (STATEMENT -> IFSTAT .)
    LCURLYBRACKET   reduce using rule 23 (STATEMENT -> IFSTAT .)
    RCURLYBRACKET   reduce using rule 23 (STATEMENT -> IFSTAT .)
    ELSE            reduce using rule 23 (STATEMENT -> IFSTAT .)


state 14

    (24) STATEMENT -> FORSTAT .

    $end            reduce using rule 24 (STATEMENT -> FORSTAT .)
    BREAK           reduce using rule 24 (STATEMENT -> FORSTAT .)
    SEMICOLON       reduce using rule 24 (STATEMENT -> FORSTAT .)
    PRINT           reduce using rule 24 (STATEMENT -> FORSTAT .)
    READ            reduce using rule 24 (STATEMENT -> FORSTAT .)
    RETURN          reduce using rule 24 (STATEMENT -> FORSTAT .)
    IF              reduce using rule 24 (STATEMENT -> FORSTAT .)
    FOR             reduce using rule 24 (STATEMENT -> FORSTAT .)
    INT             reduce using rule 24 (STATEMENT -> FORSTAT .)
    FLOAT           reduce using rule 24 (STATEMENT -> FORSTAT .)
    STRING          reduce using rule 24 (STATEMENT -> FORSTAT .)
    IDENT           reduce using rule 24 (STATEMENT -> FORSTAT .)
    LCURLYBRACKET   reduce using rule 24 (STATEMENT -> FORSTAT .)
    RCURLYBRACKET   reduce using rule 24 (STATEMENT -> FORSTAT .)
    ELSE            reduce using rule 24 (STATEMENT -> FORSTAT .)


state 15

    (26) STATEMENT -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 35


state 16

    (7) FUNCLIST -> FUNCDEF . FUNCLISTAUX
    (8) FUNCLISTAUX -> . FUNCLIST
    (9) FUNCLISTAUX -> . empty
    (7) FUNCLIST -> . FUNCDEF FUNCLISTAUX
    (1) empty -> .
    (10) FUNCDEF -> . DEF IDENT new_scope LPARENTHESIS PARAMLIST RPARENTHESIS LCURLYBRACKET STATELIST RCURLYBRACKET

    $end            reduce using rule 1 (empty -> .)
    DEF             shift and go to state 25

    FUNCDEF                        shift and go to state 16
    FUNCLISTAUX                    shift and go to state 36
    FUNCLIST                       shift and go to state 37
    empty                          shift and go to state 38

state 17

    (28) VARDECL -> DATATYPE . IDENT OPTIONAL_VEC

    IDENT           shift and go to state 39


state 18

    (80) LVALUE -> IDENT . OPT_NUMEXPRESSION
    (50) OPT_NUMEXPRESSION -> . LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION
    (51) OPT_NUMEXPRESSION -> . empty
    (1) empty -> .

    LBRACKET        shift and go to state 41
    ASSIGNMENT      reduce using rule 1 (empty -> .)
    MULT            reduce using rule 1 (empty -> .)
    MOD             reduce using rule 1 (empty -> .)
    DIV             reduce using rule 1 (empty -> .)
    PLUS            reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    LESSTHAN        reduce using rule 1 (empty -> .)
    GREATERTHAN     reduce using rule 1 (empty -> .)
    LESSEQUAL       reduce using rule 1 (empty -> .)
    GREATEREQUAL    reduce using rule 1 (empty -> .)
    EQUAL           reduce using rule 1 (empty -> .)
    DIFFERENT       reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    RPARENTHESIS    reduce using rule 1 (empty -> .)

    OPT_NUMEXPRESSION              shift and go to state 40
    empty                          shift and go to state 42

state 19

    (31) ATRIBSTAT -> LVALUE . ASSIGNMENT R_ATRIB

    ASSIGNMENT      shift and go to state 43


state 20

    (39) PRINTSTAT -> PRINT . EXPRESSION
    (52) EXPRESSION -> . NUMEXPRESSION OPT_EXPRESSION
    (61) NUMEXPRESSION -> . TERM OTHERTERM
    (66) TERM -> . UNARYEXPR OPT_UNARYEXPR
    (72) UNARYEXPR -> . PLUS_OR_MINUS FACTOR
    (73) UNARYEXPR -> . FACTOR
    (64) PLUS_OR_MINUS -> . PLUS
    (65) PLUS_OR_MINUS -> . MINUS
    (74) FACTOR -> . INT_CONSTANT
    (75) FACTOR -> . FLOAT_CONSTANT
    (76) FACTOR -> . STRING_CONSTANT
    (77) FACTOR -> . NULL
    (78) FACTOR -> . LVALUE
    (79) FACTOR -> . LPARENTHESIS NUMEXPRESSION RPARENTHESIS
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    INT_CONSTANT    shift and go to state 52
    FLOAT_CONSTANT  shift and go to state 53
    STRING_CONSTANT shift and go to state 54
    NULL            shift and go to state 55
    LPARENTHESIS    shift and go to state 57
    IDENT           shift and go to state 18

    EXPRESSION                     shift and go to state 44
    NUMEXPRESSION                  shift and go to state 45
    TERM                           shift and go to state 46
    UNARYEXPR                      shift and go to state 47
    PLUS_OR_MINUS                  shift and go to state 48
    FACTOR                         shift and go to state 49
    LVALUE                         shift and go to state 56

state 21

    (40) READSTAT -> READ . LVALUE
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    IDENT           shift and go to state 18

    LVALUE                         shift and go to state 58

state 22

    (41) RETURNSTAT -> RETURN .

    SEMICOLON       reduce using rule 41 (RETURNSTAT -> RETURN .)


state 23

    (42) IFSTAT -> IF . LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX

    LPARENTHESIS    shift and go to state 59


state 24

    (45) FORSTAT -> FOR . LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT

    LPARENTHESIS    shift and go to state 60


state 25

    (10) FUNCDEF -> DEF . IDENT new_scope LPARENTHESIS PARAMLIST RPARENTHESIS LCURLYBRACKET STATELIST RCURLYBRACKET

    IDENT           shift and go to state 61


state 26

    (15) DATATYPE -> INT .

    IDENT           reduce using rule 15 (DATATYPE -> INT .)
    LBRACKET        reduce using rule 15 (DATATYPE -> INT .)


state 27

    (16) DATATYPE -> FLOAT .

    IDENT           reduce using rule 16 (DATATYPE -> FLOAT .)
    LBRACKET        reduce using rule 16 (DATATYPE -> FLOAT .)


state 28

    (17) DATATYPE -> STRING .

    IDENT           reduce using rule 17 (DATATYPE -> STRING .)
    LBRACKET        reduce using rule 17 (DATATYPE -> STRING .)


state 29

    (25) STATEMENT -> new_scope LCURLYBRACKET . STATELIST RCURLYBRACKET
    (46) STATELIST -> . STATEMENT OPT_STATELIST
    (18) STATEMENT -> . VARDECL SEMICOLON
    (19) STATEMENT -> . ATRIBSTAT SEMICOLON
    (20) STATEMENT -> . PRINTSTAT SEMICOLON
    (21) STATEMENT -> . READSTAT SEMICOLON
    (22) STATEMENT -> . RETURNSTAT SEMICOLON
    (23) STATEMENT -> . IFSTAT
    (24) STATEMENT -> . FORSTAT
    (25) STATEMENT -> . new_scope LCURLYBRACKET STATELIST RCURLYBRACKET
    (26) STATEMENT -> . BREAK SEMICOLON
    (27) STATEMENT -> . SEMICOLON
    (28) VARDECL -> . DATATYPE IDENT OPTIONAL_VEC
    (31) ATRIBSTAT -> . LVALUE ASSIGNMENT R_ATRIB
    (39) PRINTSTAT -> . PRINT EXPRESSION
    (40) READSTAT -> . READ LVALUE
    (41) RETURNSTAT -> . RETURN
    (42) IFSTAT -> . IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX
    (45) FORSTAT -> . FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT
    (2) new_scope -> .
    (15) DATATYPE -> . INT
    (16) DATATYPE -> . FLOAT
    (17) DATATYPE -> . STRING
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    BREAK           shift and go to state 15
    SEMICOLON       shift and go to state 8
    PRINT           shift and go to state 20
    READ            shift and go to state 21
    RETURN          shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    LCURLYBRACKET   reduce using rule 2 (new_scope -> .)
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENT           shift and go to state 18

    new_scope                      shift and go to state 4
    STATELIST                      shift and go to state 62
    STATEMENT                      shift and go to state 63
    VARDECL                        shift and go to state 7
    ATRIBSTAT                      shift and go to state 9
    PRINTSTAT                      shift and go to state 10
    READSTAT                       shift and go to state 11
    RETURNSTAT                     shift and go to state 12
    IFSTAT                         shift and go to state 13
    FORSTAT                        shift and go to state 14
    DATATYPE                       shift and go to state 17
    LVALUE                         shift and go to state 19

state 30

    (18) STATEMENT -> VARDECL SEMICOLON .

    $end            reduce using rule 18 (STATEMENT -> VARDECL SEMICOLON .)
    BREAK           reduce using rule 18 (STATEMENT -> VARDECL SEMICOLON .)
    SEMICOLON       reduce using rule 18 (STATEMENT -> VARDECL SEMICOLON .)
    PRINT           reduce using rule 18 (STATEMENT -> VARDECL SEMICOLON .)
    READ            reduce using rule 18 (STATEMENT -> VARDECL SEMICOLON .)
    RETURN          reduce using rule 18 (STATEMENT -> VARDECL SEMICOLON .)
    IF              reduce using rule 18 (STATEMENT -> VARDECL SEMICOLON .)
    FOR             reduce using rule 18 (STATEMENT -> VARDECL SEMICOLON .)
    INT             reduce using rule 18 (STATEMENT -> VARDECL SEMICOLON .)
    FLOAT           reduce using rule 18 (STATEMENT -> VARDECL SEMICOLON .)
    STRING          reduce using rule 18 (STATEMENT -> VARDECL SEMICOLON .)
    IDENT           reduce using rule 18 (STATEMENT -> VARDECL SEMICOLON .)
    LCURLYBRACKET   reduce using rule 18 (STATEMENT -> VARDECL SEMICOLON .)
    RCURLYBRACKET   reduce using rule 18 (STATEMENT -> VARDECL SEMICOLON .)
    ELSE            reduce using rule 18 (STATEMENT -> VARDECL SEMICOLON .)


state 31

    (19) STATEMENT -> ATRIBSTAT SEMICOLON .

    $end            reduce using rule 19 (STATEMENT -> ATRIBSTAT SEMICOLON .)
    BREAK           reduce using rule 19 (STATEMENT -> ATRIBSTAT SEMICOLON .)
    SEMICOLON       reduce using rule 19 (STATEMENT -> ATRIBSTAT SEMICOLON .)
    PRINT           reduce using rule 19 (STATEMENT -> ATRIBSTAT SEMICOLON .)
    READ            reduce using rule 19 (STATEMENT -> ATRIBSTAT SEMICOLON .)
    RETURN          reduce using rule 19 (STATEMENT -> ATRIBSTAT SEMICOLON .)
    IF              reduce using rule 19 (STATEMENT -> ATRIBSTAT SEMICOLON .)
    FOR             reduce using rule 19 (STATEMENT -> ATRIBSTAT SEMICOLON .)
    INT             reduce using rule 19 (STATEMENT -> ATRIBSTAT SEMICOLON .)
    FLOAT           reduce using rule 19 (STATEMENT -> ATRIBSTAT SEMICOLON .)
    STRING          reduce using rule 19 (STATEMENT -> ATRIBSTAT SEMICOLON .)
    IDENT           reduce using rule 19 (STATEMENT -> ATRIBSTAT SEMICOLON .)
    LCURLYBRACKET   reduce using rule 19 (STATEMENT -> ATRIBSTAT SEMICOLON .)
    RCURLYBRACKET   reduce using rule 19 (STATEMENT -> ATRIBSTAT SEMICOLON .)
    ELSE            reduce using rule 19 (STATEMENT -> ATRIBSTAT SEMICOLON .)


state 32

    (20) STATEMENT -> PRINTSTAT SEMICOLON .

    $end            reduce using rule 20 (STATEMENT -> PRINTSTAT SEMICOLON .)
    BREAK           reduce using rule 20 (STATEMENT -> PRINTSTAT SEMICOLON .)
    SEMICOLON       reduce using rule 20 (STATEMENT -> PRINTSTAT SEMICOLON .)
    PRINT           reduce using rule 20 (STATEMENT -> PRINTSTAT SEMICOLON .)
    READ            reduce using rule 20 (STATEMENT -> PRINTSTAT SEMICOLON .)
    RETURN          reduce using rule 20 (STATEMENT -> PRINTSTAT SEMICOLON .)
    IF              reduce using rule 20 (STATEMENT -> PRINTSTAT SEMICOLON .)
    FOR             reduce using rule 20 (STATEMENT -> PRINTSTAT SEMICOLON .)
    INT             reduce using rule 20 (STATEMENT -> PRINTSTAT SEMICOLON .)
    FLOAT           reduce using rule 20 (STATEMENT -> PRINTSTAT SEMICOLON .)
    STRING          reduce using rule 20 (STATEMENT -> PRINTSTAT SEMICOLON .)
    IDENT           reduce using rule 20 (STATEMENT -> PRINTSTAT SEMICOLON .)
    LCURLYBRACKET   reduce using rule 20 (STATEMENT -> PRINTSTAT SEMICOLON .)
    RCURLYBRACKET   reduce using rule 20 (STATEMENT -> PRINTSTAT SEMICOLON .)
    ELSE            reduce using rule 20 (STATEMENT -> PRINTSTAT SEMICOLON .)


state 33

    (21) STATEMENT -> READSTAT SEMICOLON .

    $end            reduce using rule 21 (STATEMENT -> READSTAT SEMICOLON .)
    BREAK           reduce using rule 21 (STATEMENT -> READSTAT SEMICOLON .)
    SEMICOLON       reduce using rule 21 (STATEMENT -> READSTAT SEMICOLON .)
    PRINT           reduce using rule 21 (STATEMENT -> READSTAT SEMICOLON .)
    READ            reduce using rule 21 (STATEMENT -> READSTAT SEMICOLON .)
    RETURN          reduce using rule 21 (STATEMENT -> READSTAT SEMICOLON .)
    IF              reduce using rule 21 (STATEMENT -> READSTAT SEMICOLON .)
    FOR             reduce using rule 21 (STATEMENT -> READSTAT SEMICOLON .)
    INT             reduce using rule 21 (STATEMENT -> READSTAT SEMICOLON .)
    FLOAT           reduce using rule 21 (STATEMENT -> READSTAT SEMICOLON .)
    STRING          reduce using rule 21 (STATEMENT -> READSTAT SEMICOLON .)
    IDENT           reduce using rule 21 (STATEMENT -> READSTAT SEMICOLON .)
    LCURLYBRACKET   reduce using rule 21 (STATEMENT -> READSTAT SEMICOLON .)
    RCURLYBRACKET   reduce using rule 21 (STATEMENT -> READSTAT SEMICOLON .)
    ELSE            reduce using rule 21 (STATEMENT -> READSTAT SEMICOLON .)


state 34

    (22) STATEMENT -> RETURNSTAT SEMICOLON .

    $end            reduce using rule 22 (STATEMENT -> RETURNSTAT SEMICOLON .)
    BREAK           reduce using rule 22 (STATEMENT -> RETURNSTAT SEMICOLON .)
    SEMICOLON       reduce using rule 22 (STATEMENT -> RETURNSTAT SEMICOLON .)
    PRINT           reduce using rule 22 (STATEMENT -> RETURNSTAT SEMICOLON .)
    READ            reduce using rule 22 (STATEMENT -> RETURNSTAT SEMICOLON .)
    RETURN          reduce using rule 22 (STATEMENT -> RETURNSTAT SEMICOLON .)
    IF              reduce using rule 22 (STATEMENT -> RETURNSTAT SEMICOLON .)
    FOR             reduce using rule 22 (STATEMENT -> RETURNSTAT SEMICOLON .)
    INT             reduce using rule 22 (STATEMENT -> RETURNSTAT SEMICOLON .)
    FLOAT           reduce using rule 22 (STATEMENT -> RETURNSTAT SEMICOLON .)
    STRING          reduce using rule 22 (STATEMENT -> RETURNSTAT SEMICOLON .)
    IDENT           reduce using rule 22 (STATEMENT -> RETURNSTAT SEMICOLON .)
    LCURLYBRACKET   reduce using rule 22 (STATEMENT -> RETURNSTAT SEMICOLON .)
    RCURLYBRACKET   reduce using rule 22 (STATEMENT -> RETURNSTAT SEMICOLON .)
    ELSE            reduce using rule 22 (STATEMENT -> RETURNSTAT SEMICOLON .)


state 35

    (26) STATEMENT -> BREAK SEMICOLON .

    $end            reduce using rule 26 (STATEMENT -> BREAK SEMICOLON .)
    BREAK           reduce using rule 26 (STATEMENT -> BREAK SEMICOLON .)
    SEMICOLON       reduce using rule 26 (STATEMENT -> BREAK SEMICOLON .)
    PRINT           reduce using rule 26 (STATEMENT -> BREAK SEMICOLON .)
    READ            reduce using rule 26 (STATEMENT -> BREAK SEMICOLON .)
    RETURN          reduce using rule 26 (STATEMENT -> BREAK SEMICOLON .)
    IF              reduce using rule 26 (STATEMENT -> BREAK SEMICOLON .)
    FOR             reduce using rule 26 (STATEMENT -> BREAK SEMICOLON .)
    INT             reduce using rule 26 (STATEMENT -> BREAK SEMICOLON .)
    FLOAT           reduce using rule 26 (STATEMENT -> BREAK SEMICOLON .)
    STRING          reduce using rule 26 (STATEMENT -> BREAK SEMICOLON .)
    IDENT           reduce using rule 26 (STATEMENT -> BREAK SEMICOLON .)
    LCURLYBRACKET   reduce using rule 26 (STATEMENT -> BREAK SEMICOLON .)
    RCURLYBRACKET   reduce using rule 26 (STATEMENT -> BREAK SEMICOLON .)
    ELSE            reduce using rule 26 (STATEMENT -> BREAK SEMICOLON .)


state 36

    (7) FUNCLIST -> FUNCDEF FUNCLISTAUX .

    $end            reduce using rule 7 (FUNCLIST -> FUNCDEF FUNCLISTAUX .)


state 37

    (8) FUNCLISTAUX -> FUNCLIST .

    $end            reduce using rule 8 (FUNCLISTAUX -> FUNCLIST .)


state 38

    (9) FUNCLISTAUX -> empty .

    $end            reduce using rule 9 (FUNCLISTAUX -> empty .)


state 39

    (28) VARDECL -> DATATYPE IDENT . OPTIONAL_VEC
    (29) OPTIONAL_VEC -> . LBRACKET INT_CONSTANT RBRACKET OPTIONAL_VEC
    (30) OPTIONAL_VEC -> . empty
    (1) empty -> .

    LBRACKET        shift and go to state 65
    SEMICOLON       reduce using rule 1 (empty -> .)

    OPTIONAL_VEC                   shift and go to state 64
    empty                          shift and go to state 66

state 40

    (80) LVALUE -> IDENT OPT_NUMEXPRESSION .

    ASSIGNMENT      reduce using rule 80 (LVALUE -> IDENT OPT_NUMEXPRESSION .)
    MULT            reduce using rule 80 (LVALUE -> IDENT OPT_NUMEXPRESSION .)
    MOD             reduce using rule 80 (LVALUE -> IDENT OPT_NUMEXPRESSION .)
    DIV             reduce using rule 80 (LVALUE -> IDENT OPT_NUMEXPRESSION .)
    PLUS            reduce using rule 80 (LVALUE -> IDENT OPT_NUMEXPRESSION .)
    MINUS           reduce using rule 80 (LVALUE -> IDENT OPT_NUMEXPRESSION .)
    LESSTHAN        reduce using rule 80 (LVALUE -> IDENT OPT_NUMEXPRESSION .)
    GREATERTHAN     reduce using rule 80 (LVALUE -> IDENT OPT_NUMEXPRESSION .)
    LESSEQUAL       reduce using rule 80 (LVALUE -> IDENT OPT_NUMEXPRESSION .)
    GREATEREQUAL    reduce using rule 80 (LVALUE -> IDENT OPT_NUMEXPRESSION .)
    EQUAL           reduce using rule 80 (LVALUE -> IDENT OPT_NUMEXPRESSION .)
    DIFFERENT       reduce using rule 80 (LVALUE -> IDENT OPT_NUMEXPRESSION .)
    SEMICOLON       reduce using rule 80 (LVALUE -> IDENT OPT_NUMEXPRESSION .)
    RBRACKET        reduce using rule 80 (LVALUE -> IDENT OPT_NUMEXPRESSION .)
    RPARENTHESIS    reduce using rule 80 (LVALUE -> IDENT OPT_NUMEXPRESSION .)


state 41

    (50) OPT_NUMEXPRESSION -> LBRACKET . NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION
    (61) NUMEXPRESSION -> . TERM OTHERTERM
    (66) TERM -> . UNARYEXPR OPT_UNARYEXPR
    (72) UNARYEXPR -> . PLUS_OR_MINUS FACTOR
    (73) UNARYEXPR -> . FACTOR
    (64) PLUS_OR_MINUS -> . PLUS
    (65) PLUS_OR_MINUS -> . MINUS
    (74) FACTOR -> . INT_CONSTANT
    (75) FACTOR -> . FLOAT_CONSTANT
    (76) FACTOR -> . STRING_CONSTANT
    (77) FACTOR -> . NULL
    (78) FACTOR -> . LVALUE
    (79) FACTOR -> . LPARENTHESIS NUMEXPRESSION RPARENTHESIS
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    INT_CONSTANT    shift and go to state 52
    FLOAT_CONSTANT  shift and go to state 53
    STRING_CONSTANT shift and go to state 54
    NULL            shift and go to state 55
    LPARENTHESIS    shift and go to state 57
    IDENT           shift and go to state 18

    NUMEXPRESSION                  shift and go to state 67
    TERM                           shift and go to state 46
    UNARYEXPR                      shift and go to state 47
    PLUS_OR_MINUS                  shift and go to state 48
    FACTOR                         shift and go to state 49
    LVALUE                         shift and go to state 56

state 42

    (51) OPT_NUMEXPRESSION -> empty .

    ASSIGNMENT      reduce using rule 51 (OPT_NUMEXPRESSION -> empty .)
    MULT            reduce using rule 51 (OPT_NUMEXPRESSION -> empty .)
    MOD             reduce using rule 51 (OPT_NUMEXPRESSION -> empty .)
    DIV             reduce using rule 51 (OPT_NUMEXPRESSION -> empty .)
    PLUS            reduce using rule 51 (OPT_NUMEXPRESSION -> empty .)
    MINUS           reduce using rule 51 (OPT_NUMEXPRESSION -> empty .)
    LESSTHAN        reduce using rule 51 (OPT_NUMEXPRESSION -> empty .)
    GREATERTHAN     reduce using rule 51 (OPT_NUMEXPRESSION -> empty .)
    LESSEQUAL       reduce using rule 51 (OPT_NUMEXPRESSION -> empty .)
    GREATEREQUAL    reduce using rule 51 (OPT_NUMEXPRESSION -> empty .)
    EQUAL           reduce using rule 51 (OPT_NUMEXPRESSION -> empty .)
    DIFFERENT       reduce using rule 51 (OPT_NUMEXPRESSION -> empty .)
    SEMICOLON       reduce using rule 51 (OPT_NUMEXPRESSION -> empty .)
    RBRACKET        reduce using rule 51 (OPT_NUMEXPRESSION -> empty .)
    RPARENTHESIS    reduce using rule 51 (OPT_NUMEXPRESSION -> empty .)


state 43

    (31) ATRIBSTAT -> LVALUE ASSIGNMENT . R_ATRIB
    (32) R_ATRIB -> . EXPRESSION
    (33) R_ATRIB -> . ALLOCEXPRESSION
    (34) R_ATRIB -> . FUNCCALL
    (52) EXPRESSION -> . NUMEXPRESSION OPT_EXPRESSION
    (49) ALLOCEXPRESSION -> . NEW DATATYPE LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION
    (35) FUNCCALL -> . IDENT LPARENTHESIS PARAMLISTCALL RPARENTHESIS
    (61) NUMEXPRESSION -> . TERM OTHERTERM
    (66) TERM -> . UNARYEXPR OPT_UNARYEXPR
    (72) UNARYEXPR -> . PLUS_OR_MINUS FACTOR
    (73) UNARYEXPR -> . FACTOR
    (64) PLUS_OR_MINUS -> . PLUS
    (65) PLUS_OR_MINUS -> . MINUS
    (74) FACTOR -> . INT_CONSTANT
    (75) FACTOR -> . FLOAT_CONSTANT
    (76) FACTOR -> . STRING_CONSTANT
    (77) FACTOR -> . NULL
    (78) FACTOR -> . LVALUE
    (79) FACTOR -> . LPARENTHESIS NUMEXPRESSION RPARENTHESIS
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    NEW             shift and go to state 72
    IDENT           shift and go to state 73
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    INT_CONSTANT    shift and go to state 52
    FLOAT_CONSTANT  shift and go to state 53
    STRING_CONSTANT shift and go to state 54
    NULL            shift and go to state 55
    LPARENTHESIS    shift and go to state 57

    LVALUE                         shift and go to state 56
    R_ATRIB                        shift and go to state 68
    EXPRESSION                     shift and go to state 69
    ALLOCEXPRESSION                shift and go to state 70
    FUNCCALL                       shift and go to state 71
    NUMEXPRESSION                  shift and go to state 45
    TERM                           shift and go to state 46
    UNARYEXPR                      shift and go to state 47
    PLUS_OR_MINUS                  shift and go to state 48
    FACTOR                         shift and go to state 49

state 44

    (39) PRINTSTAT -> PRINT EXPRESSION .

    SEMICOLON       reduce using rule 39 (PRINTSTAT -> PRINT EXPRESSION .)


state 45

    (52) EXPRESSION -> NUMEXPRESSION . OPT_EXPRESSION
    (53) OPT_EXPRESSION -> . REL_OP NUMEXPRESSION
    (54) OPT_EXPRESSION -> . empty
    (55) REL_OP -> . LESSTHAN
    (56) REL_OP -> . GREATERTHAN
    (57) REL_OP -> . LESSEQUAL
    (58) REL_OP -> . GREATEREQUAL
    (59) REL_OP -> . EQUAL
    (60) REL_OP -> . DIFFERENT
    (1) empty -> .

    LESSTHAN        shift and go to state 77
    GREATERTHAN     shift and go to state 78
    LESSEQUAL       shift and go to state 79
    GREATEREQUAL    shift and go to state 80
    EQUAL           shift and go to state 81
    DIFFERENT       shift and go to state 82
    SEMICOLON       reduce using rule 1 (empty -> .)
    RPARENTHESIS    reduce using rule 1 (empty -> .)

    OPT_EXPRESSION                 shift and go to state 74
    REL_OP                         shift and go to state 75
    empty                          shift and go to state 76

state 46

    (61) NUMEXPRESSION -> TERM . OTHERTERM
    (62) OTHERTERM -> . PLUS_OR_MINUS TERM OTHERTERM
    (63) OTHERTERM -> . empty
    (64) PLUS_OR_MINUS -> . PLUS
    (65) PLUS_OR_MINUS -> . MINUS
    (1) empty -> .

    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    LESSTHAN        reduce using rule 1 (empty -> .)
    GREATERTHAN     reduce using rule 1 (empty -> .)
    LESSEQUAL       reduce using rule 1 (empty -> .)
    GREATEREQUAL    reduce using rule 1 (empty -> .)
    EQUAL           reduce using rule 1 (empty -> .)
    DIFFERENT       reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    RPARENTHESIS    reduce using rule 1 (empty -> .)

    OTHERTERM                      shift and go to state 83
    PLUS_OR_MINUS                  shift and go to state 84
    empty                          shift and go to state 85

state 47

    (66) TERM -> UNARYEXPR . OPT_UNARYEXPR
    (67) OPT_UNARYEXPR -> . OPERATOR UNARYEXPR OPT_UNARYEXPR
    (68) OPT_UNARYEXPR -> . empty
    (69) OPERATOR -> . MULT
    (70) OPERATOR -> . MOD
    (71) OPERATOR -> . DIV
    (1) empty -> .

    MULT            shift and go to state 89
    MOD             shift and go to state 90
    DIV             shift and go to state 91
    PLUS            reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    LESSTHAN        reduce using rule 1 (empty -> .)
    GREATERTHAN     reduce using rule 1 (empty -> .)
    LESSEQUAL       reduce using rule 1 (empty -> .)
    GREATEREQUAL    reduce using rule 1 (empty -> .)
    EQUAL           reduce using rule 1 (empty -> .)
    DIFFERENT       reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    RPARENTHESIS    reduce using rule 1 (empty -> .)

    OPT_UNARYEXPR                  shift and go to state 86
    OPERATOR                       shift and go to state 87
    empty                          shift and go to state 88

state 48

    (72) UNARYEXPR -> PLUS_OR_MINUS . FACTOR
    (74) FACTOR -> . INT_CONSTANT
    (75) FACTOR -> . FLOAT_CONSTANT
    (76) FACTOR -> . STRING_CONSTANT
    (77) FACTOR -> . NULL
    (78) FACTOR -> . LVALUE
    (79) FACTOR -> . LPARENTHESIS NUMEXPRESSION RPARENTHESIS
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    INT_CONSTANT    shift and go to state 52
    FLOAT_CONSTANT  shift and go to state 53
    STRING_CONSTANT shift and go to state 54
    NULL            shift and go to state 55
    LPARENTHESIS    shift and go to state 57
    IDENT           shift and go to state 18

    FACTOR                         shift and go to state 92
    LVALUE                         shift and go to state 56

state 49

    (73) UNARYEXPR -> FACTOR .

    MULT            reduce using rule 73 (UNARYEXPR -> FACTOR .)
    MOD             reduce using rule 73 (UNARYEXPR -> FACTOR .)
    DIV             reduce using rule 73 (UNARYEXPR -> FACTOR .)
    PLUS            reduce using rule 73 (UNARYEXPR -> FACTOR .)
    MINUS           reduce using rule 73 (UNARYEXPR -> FACTOR .)
    LESSTHAN        reduce using rule 73 (UNARYEXPR -> FACTOR .)
    GREATERTHAN     reduce using rule 73 (UNARYEXPR -> FACTOR .)
    LESSEQUAL       reduce using rule 73 (UNARYEXPR -> FACTOR .)
    GREATEREQUAL    reduce using rule 73 (UNARYEXPR -> FACTOR .)
    EQUAL           reduce using rule 73 (UNARYEXPR -> FACTOR .)
    DIFFERENT       reduce using rule 73 (UNARYEXPR -> FACTOR .)
    SEMICOLON       reduce using rule 73 (UNARYEXPR -> FACTOR .)
    RBRACKET        reduce using rule 73 (UNARYEXPR -> FACTOR .)
    RPARENTHESIS    reduce using rule 73 (UNARYEXPR -> FACTOR .)


state 50

    (64) PLUS_OR_MINUS -> PLUS .

    INT_CONSTANT    reduce using rule 64 (PLUS_OR_MINUS -> PLUS .)
    FLOAT_CONSTANT  reduce using rule 64 (PLUS_OR_MINUS -> PLUS .)
    STRING_CONSTANT reduce using rule 64 (PLUS_OR_MINUS -> PLUS .)
    NULL            reduce using rule 64 (PLUS_OR_MINUS -> PLUS .)
    LPARENTHESIS    reduce using rule 64 (PLUS_OR_MINUS -> PLUS .)
    IDENT           reduce using rule 64 (PLUS_OR_MINUS -> PLUS .)
    PLUS            reduce using rule 64 (PLUS_OR_MINUS -> PLUS .)
    MINUS           reduce using rule 64 (PLUS_OR_MINUS -> PLUS .)


state 51

    (65) PLUS_OR_MINUS -> MINUS .

    INT_CONSTANT    reduce using rule 65 (PLUS_OR_MINUS -> MINUS .)
    FLOAT_CONSTANT  reduce using rule 65 (PLUS_OR_MINUS -> MINUS .)
    STRING_CONSTANT reduce using rule 65 (PLUS_OR_MINUS -> MINUS .)
    NULL            reduce using rule 65 (PLUS_OR_MINUS -> MINUS .)
    LPARENTHESIS    reduce using rule 65 (PLUS_OR_MINUS -> MINUS .)
    IDENT           reduce using rule 65 (PLUS_OR_MINUS -> MINUS .)
    PLUS            reduce using rule 65 (PLUS_OR_MINUS -> MINUS .)
    MINUS           reduce using rule 65 (PLUS_OR_MINUS -> MINUS .)


state 52

    (74) FACTOR -> INT_CONSTANT .

    MULT            reduce using rule 74 (FACTOR -> INT_CONSTANT .)
    MOD             reduce using rule 74 (FACTOR -> INT_CONSTANT .)
    DIV             reduce using rule 74 (FACTOR -> INT_CONSTANT .)
    PLUS            reduce using rule 74 (FACTOR -> INT_CONSTANT .)
    MINUS           reduce using rule 74 (FACTOR -> INT_CONSTANT .)
    LESSTHAN        reduce using rule 74 (FACTOR -> INT_CONSTANT .)
    GREATERTHAN     reduce using rule 74 (FACTOR -> INT_CONSTANT .)
    LESSEQUAL       reduce using rule 74 (FACTOR -> INT_CONSTANT .)
    GREATEREQUAL    reduce using rule 74 (FACTOR -> INT_CONSTANT .)
    EQUAL           reduce using rule 74 (FACTOR -> INT_CONSTANT .)
    DIFFERENT       reduce using rule 74 (FACTOR -> INT_CONSTANT .)
    SEMICOLON       reduce using rule 74 (FACTOR -> INT_CONSTANT .)
    RBRACKET        reduce using rule 74 (FACTOR -> INT_CONSTANT .)
    RPARENTHESIS    reduce using rule 74 (FACTOR -> INT_CONSTANT .)


state 53

    (75) FACTOR -> FLOAT_CONSTANT .

    MULT            reduce using rule 75 (FACTOR -> FLOAT_CONSTANT .)
    MOD             reduce using rule 75 (FACTOR -> FLOAT_CONSTANT .)
    DIV             reduce using rule 75 (FACTOR -> FLOAT_CONSTANT .)
    PLUS            reduce using rule 75 (FACTOR -> FLOAT_CONSTANT .)
    MINUS           reduce using rule 75 (FACTOR -> FLOAT_CONSTANT .)
    LESSTHAN        reduce using rule 75 (FACTOR -> FLOAT_CONSTANT .)
    GREATERTHAN     reduce using rule 75 (FACTOR -> FLOAT_CONSTANT .)
    LESSEQUAL       reduce using rule 75 (FACTOR -> FLOAT_CONSTANT .)
    GREATEREQUAL    reduce using rule 75 (FACTOR -> FLOAT_CONSTANT .)
    EQUAL           reduce using rule 75 (FACTOR -> FLOAT_CONSTANT .)
    DIFFERENT       reduce using rule 75 (FACTOR -> FLOAT_CONSTANT .)
    SEMICOLON       reduce using rule 75 (FACTOR -> FLOAT_CONSTANT .)
    RBRACKET        reduce using rule 75 (FACTOR -> FLOAT_CONSTANT .)
    RPARENTHESIS    reduce using rule 75 (FACTOR -> FLOAT_CONSTANT .)


state 54

    (76) FACTOR -> STRING_CONSTANT .

    MULT            reduce using rule 76 (FACTOR -> STRING_CONSTANT .)
    MOD             reduce using rule 76 (FACTOR -> STRING_CONSTANT .)
    DIV             reduce using rule 76 (FACTOR -> STRING_CONSTANT .)
    PLUS            reduce using rule 76 (FACTOR -> STRING_CONSTANT .)
    MINUS           reduce using rule 76 (FACTOR -> STRING_CONSTANT .)
    LESSTHAN        reduce using rule 76 (FACTOR -> STRING_CONSTANT .)
    GREATERTHAN     reduce using rule 76 (FACTOR -> STRING_CONSTANT .)
    LESSEQUAL       reduce using rule 76 (FACTOR -> STRING_CONSTANT .)
    GREATEREQUAL    reduce using rule 76 (FACTOR -> STRING_CONSTANT .)
    EQUAL           reduce using rule 76 (FACTOR -> STRING_CONSTANT .)
    DIFFERENT       reduce using rule 76 (FACTOR -> STRING_CONSTANT .)
    SEMICOLON       reduce using rule 76 (FACTOR -> STRING_CONSTANT .)
    RBRACKET        reduce using rule 76 (FACTOR -> STRING_CONSTANT .)
    RPARENTHESIS    reduce using rule 76 (FACTOR -> STRING_CONSTANT .)


state 55

    (77) FACTOR -> NULL .

    MULT            reduce using rule 77 (FACTOR -> NULL .)
    MOD             reduce using rule 77 (FACTOR -> NULL .)
    DIV             reduce using rule 77 (FACTOR -> NULL .)
    PLUS            reduce using rule 77 (FACTOR -> NULL .)
    MINUS           reduce using rule 77 (FACTOR -> NULL .)
    LESSTHAN        reduce using rule 77 (FACTOR -> NULL .)
    GREATERTHAN     reduce using rule 77 (FACTOR -> NULL .)
    LESSEQUAL       reduce using rule 77 (FACTOR -> NULL .)
    GREATEREQUAL    reduce using rule 77 (FACTOR -> NULL .)
    EQUAL           reduce using rule 77 (FACTOR -> NULL .)
    DIFFERENT       reduce using rule 77 (FACTOR -> NULL .)
    SEMICOLON       reduce using rule 77 (FACTOR -> NULL .)
    RBRACKET        reduce using rule 77 (FACTOR -> NULL .)
    RPARENTHESIS    reduce using rule 77 (FACTOR -> NULL .)


state 56

    (78) FACTOR -> LVALUE .

    MULT            reduce using rule 78 (FACTOR -> LVALUE .)
    MOD             reduce using rule 78 (FACTOR -> LVALUE .)
    DIV             reduce using rule 78 (FACTOR -> LVALUE .)
    PLUS            reduce using rule 78 (FACTOR -> LVALUE .)
    MINUS           reduce using rule 78 (FACTOR -> LVALUE .)
    LESSTHAN        reduce using rule 78 (FACTOR -> LVALUE .)
    GREATERTHAN     reduce using rule 78 (FACTOR -> LVALUE .)
    LESSEQUAL       reduce using rule 78 (FACTOR -> LVALUE .)
    GREATEREQUAL    reduce using rule 78 (FACTOR -> LVALUE .)
    EQUAL           reduce using rule 78 (FACTOR -> LVALUE .)
    DIFFERENT       reduce using rule 78 (FACTOR -> LVALUE .)
    SEMICOLON       reduce using rule 78 (FACTOR -> LVALUE .)
    RBRACKET        reduce using rule 78 (FACTOR -> LVALUE .)
    RPARENTHESIS    reduce using rule 78 (FACTOR -> LVALUE .)


state 57

    (79) FACTOR -> LPARENTHESIS . NUMEXPRESSION RPARENTHESIS
    (61) NUMEXPRESSION -> . TERM OTHERTERM
    (66) TERM -> . UNARYEXPR OPT_UNARYEXPR
    (72) UNARYEXPR -> . PLUS_OR_MINUS FACTOR
    (73) UNARYEXPR -> . FACTOR
    (64) PLUS_OR_MINUS -> . PLUS
    (65) PLUS_OR_MINUS -> . MINUS
    (74) FACTOR -> . INT_CONSTANT
    (75) FACTOR -> . FLOAT_CONSTANT
    (76) FACTOR -> . STRING_CONSTANT
    (77) FACTOR -> . NULL
    (78) FACTOR -> . LVALUE
    (79) FACTOR -> . LPARENTHESIS NUMEXPRESSION RPARENTHESIS
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    INT_CONSTANT    shift and go to state 52
    FLOAT_CONSTANT  shift and go to state 53
    STRING_CONSTANT shift and go to state 54
    NULL            shift and go to state 55
    LPARENTHESIS    shift and go to state 57
    IDENT           shift and go to state 18

    NUMEXPRESSION                  shift and go to state 93
    TERM                           shift and go to state 46
    UNARYEXPR                      shift and go to state 47
    PLUS_OR_MINUS                  shift and go to state 48
    FACTOR                         shift and go to state 49
    LVALUE                         shift and go to state 56

state 58

    (40) READSTAT -> READ LVALUE .

    SEMICOLON       reduce using rule 40 (READSTAT -> READ LVALUE .)


state 59

    (42) IFSTAT -> IF LPARENTHESIS . EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX
    (52) EXPRESSION -> . NUMEXPRESSION OPT_EXPRESSION
    (61) NUMEXPRESSION -> . TERM OTHERTERM
    (66) TERM -> . UNARYEXPR OPT_UNARYEXPR
    (72) UNARYEXPR -> . PLUS_OR_MINUS FACTOR
    (73) UNARYEXPR -> . FACTOR
    (64) PLUS_OR_MINUS -> . PLUS
    (65) PLUS_OR_MINUS -> . MINUS
    (74) FACTOR -> . INT_CONSTANT
    (75) FACTOR -> . FLOAT_CONSTANT
    (76) FACTOR -> . STRING_CONSTANT
    (77) FACTOR -> . NULL
    (78) FACTOR -> . LVALUE
    (79) FACTOR -> . LPARENTHESIS NUMEXPRESSION RPARENTHESIS
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    INT_CONSTANT    shift and go to state 52
    FLOAT_CONSTANT  shift and go to state 53
    STRING_CONSTANT shift and go to state 54
    NULL            shift and go to state 55
    LPARENTHESIS    shift and go to state 57
    IDENT           shift and go to state 18

    EXPRESSION                     shift and go to state 94
    NUMEXPRESSION                  shift and go to state 45
    TERM                           shift and go to state 46
    UNARYEXPR                      shift and go to state 47
    PLUS_OR_MINUS                  shift and go to state 48
    FACTOR                         shift and go to state 49
    LVALUE                         shift and go to state 56

state 60

    (45) FORSTAT -> FOR LPARENTHESIS . ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT
    (31) ATRIBSTAT -> . LVALUE ASSIGNMENT R_ATRIB
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    IDENT           shift and go to state 18

    ATRIBSTAT                      shift and go to state 95
    LVALUE                         shift and go to state 19

state 61

    (10) FUNCDEF -> DEF IDENT . new_scope LPARENTHESIS PARAMLIST RPARENTHESIS LCURLYBRACKET STATELIST RCURLYBRACKET
    (2) new_scope -> .

    LPARENTHESIS    reduce using rule 2 (new_scope -> .)

    new_scope                      shift and go to state 96

state 62

    (25) STATEMENT -> new_scope LCURLYBRACKET STATELIST . RCURLYBRACKET

    RCURLYBRACKET   shift and go to state 97


state 63

    (46) STATELIST -> STATEMENT . OPT_STATELIST
    (47) OPT_STATELIST -> . STATELIST
    (48) OPT_STATELIST -> . empty
    (46) STATELIST -> . STATEMENT OPT_STATELIST
    (1) empty -> .
    (18) STATEMENT -> . VARDECL SEMICOLON
    (19) STATEMENT -> . ATRIBSTAT SEMICOLON
    (20) STATEMENT -> . PRINTSTAT SEMICOLON
    (21) STATEMENT -> . READSTAT SEMICOLON
    (22) STATEMENT -> . RETURNSTAT SEMICOLON
    (23) STATEMENT -> . IFSTAT
    (24) STATEMENT -> . FORSTAT
    (25) STATEMENT -> . new_scope LCURLYBRACKET STATELIST RCURLYBRACKET
    (26) STATEMENT -> . BREAK SEMICOLON
    (27) STATEMENT -> . SEMICOLON
    (28) VARDECL -> . DATATYPE IDENT OPTIONAL_VEC
    (31) ATRIBSTAT -> . LVALUE ASSIGNMENT R_ATRIB
    (39) PRINTSTAT -> . PRINT EXPRESSION
    (40) READSTAT -> . READ LVALUE
    (41) RETURNSTAT -> . RETURN
    (42) IFSTAT -> . IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX
    (45) FORSTAT -> . FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT
    (2) new_scope -> .
    (15) DATATYPE -> . INT
    (16) DATATYPE -> . FLOAT
    (17) DATATYPE -> . STRING
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    RCURLYBRACKET   reduce using rule 1 (empty -> .)
    BREAK           shift and go to state 15
    SEMICOLON       shift and go to state 8
    PRINT           shift and go to state 20
    READ            shift and go to state 21
    RETURN          shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    LCURLYBRACKET   reduce using rule 2 (new_scope -> .)
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENT           shift and go to state 18

    STATEMENT                      shift and go to state 63
    OPT_STATELIST                  shift and go to state 98
    STATELIST                      shift and go to state 99
    empty                          shift and go to state 100
    VARDECL                        shift and go to state 7
    ATRIBSTAT                      shift and go to state 9
    PRINTSTAT                      shift and go to state 10
    READSTAT                       shift and go to state 11
    RETURNSTAT                     shift and go to state 12
    IFSTAT                         shift and go to state 13
    FORSTAT                        shift and go to state 14
    new_scope                      shift and go to state 4
    DATATYPE                       shift and go to state 17
    LVALUE                         shift and go to state 19

state 64

    (28) VARDECL -> DATATYPE IDENT OPTIONAL_VEC .

    SEMICOLON       reduce using rule 28 (VARDECL -> DATATYPE IDENT OPTIONAL_VEC .)


state 65

    (29) OPTIONAL_VEC -> LBRACKET . INT_CONSTANT RBRACKET OPTIONAL_VEC

    INT_CONSTANT    shift and go to state 101


state 66

    (30) OPTIONAL_VEC -> empty .

    SEMICOLON       reduce using rule 30 (OPTIONAL_VEC -> empty .)


state 67

    (50) OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION . RBRACKET OPT_NUMEXPRESSION

    RBRACKET        shift and go to state 102


state 68

    (31) ATRIBSTAT -> LVALUE ASSIGNMENT R_ATRIB .

    SEMICOLON       reduce using rule 31 (ATRIBSTAT -> LVALUE ASSIGNMENT R_ATRIB .)
    RPARENTHESIS    reduce using rule 31 (ATRIBSTAT -> LVALUE ASSIGNMENT R_ATRIB .)


state 69

    (32) R_ATRIB -> EXPRESSION .

    SEMICOLON       reduce using rule 32 (R_ATRIB -> EXPRESSION .)
    RPARENTHESIS    reduce using rule 32 (R_ATRIB -> EXPRESSION .)


state 70

    (33) R_ATRIB -> ALLOCEXPRESSION .

    SEMICOLON       reduce using rule 33 (R_ATRIB -> ALLOCEXPRESSION .)
    RPARENTHESIS    reduce using rule 33 (R_ATRIB -> ALLOCEXPRESSION .)


state 71

    (34) R_ATRIB -> FUNCCALL .

    SEMICOLON       reduce using rule 34 (R_ATRIB -> FUNCCALL .)
    RPARENTHESIS    reduce using rule 34 (R_ATRIB -> FUNCCALL .)


state 72

    (49) ALLOCEXPRESSION -> NEW . DATATYPE LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION
    (15) DATATYPE -> . INT
    (16) DATATYPE -> . FLOAT
    (17) DATATYPE -> . STRING

    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28

    DATATYPE                       shift and go to state 103

state 73

    (35) FUNCCALL -> IDENT . LPARENTHESIS PARAMLISTCALL RPARENTHESIS
    (80) LVALUE -> IDENT . OPT_NUMEXPRESSION
    (50) OPT_NUMEXPRESSION -> . LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION
    (51) OPT_NUMEXPRESSION -> . empty
    (1) empty -> .

    LPARENTHESIS    shift and go to state 104
    LBRACKET        shift and go to state 41
    MULT            reduce using rule 1 (empty -> .)
    MOD             reduce using rule 1 (empty -> .)
    DIV             reduce using rule 1 (empty -> .)
    PLUS            reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    LESSTHAN        reduce using rule 1 (empty -> .)
    GREATERTHAN     reduce using rule 1 (empty -> .)
    LESSEQUAL       reduce using rule 1 (empty -> .)
    GREATEREQUAL    reduce using rule 1 (empty -> .)
    EQUAL           reduce using rule 1 (empty -> .)
    DIFFERENT       reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    RPARENTHESIS    reduce using rule 1 (empty -> .)

    OPT_NUMEXPRESSION              shift and go to state 40
    empty                          shift and go to state 42

state 74

    (52) EXPRESSION -> NUMEXPRESSION OPT_EXPRESSION .

    SEMICOLON       reduce using rule 52 (EXPRESSION -> NUMEXPRESSION OPT_EXPRESSION .)
    RPARENTHESIS    reduce using rule 52 (EXPRESSION -> NUMEXPRESSION OPT_EXPRESSION .)


state 75

    (53) OPT_EXPRESSION -> REL_OP . NUMEXPRESSION
    (61) NUMEXPRESSION -> . TERM OTHERTERM
    (66) TERM -> . UNARYEXPR OPT_UNARYEXPR
    (72) UNARYEXPR -> . PLUS_OR_MINUS FACTOR
    (73) UNARYEXPR -> . FACTOR
    (64) PLUS_OR_MINUS -> . PLUS
    (65) PLUS_OR_MINUS -> . MINUS
    (74) FACTOR -> . INT_CONSTANT
    (75) FACTOR -> . FLOAT_CONSTANT
    (76) FACTOR -> . STRING_CONSTANT
    (77) FACTOR -> . NULL
    (78) FACTOR -> . LVALUE
    (79) FACTOR -> . LPARENTHESIS NUMEXPRESSION RPARENTHESIS
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    INT_CONSTANT    shift and go to state 52
    FLOAT_CONSTANT  shift and go to state 53
    STRING_CONSTANT shift and go to state 54
    NULL            shift and go to state 55
    LPARENTHESIS    shift and go to state 57
    IDENT           shift and go to state 18

    NUMEXPRESSION                  shift and go to state 105
    TERM                           shift and go to state 46
    UNARYEXPR                      shift and go to state 47
    PLUS_OR_MINUS                  shift and go to state 48
    FACTOR                         shift and go to state 49
    LVALUE                         shift and go to state 56

state 76

    (54) OPT_EXPRESSION -> empty .

    SEMICOLON       reduce using rule 54 (OPT_EXPRESSION -> empty .)
    RPARENTHESIS    reduce using rule 54 (OPT_EXPRESSION -> empty .)


state 77

    (55) REL_OP -> LESSTHAN .

    PLUS            reduce using rule 55 (REL_OP -> LESSTHAN .)
    MINUS           reduce using rule 55 (REL_OP -> LESSTHAN .)
    INT_CONSTANT    reduce using rule 55 (REL_OP -> LESSTHAN .)
    FLOAT_CONSTANT  reduce using rule 55 (REL_OP -> LESSTHAN .)
    STRING_CONSTANT reduce using rule 55 (REL_OP -> LESSTHAN .)
    NULL            reduce using rule 55 (REL_OP -> LESSTHAN .)
    LPARENTHESIS    reduce using rule 55 (REL_OP -> LESSTHAN .)
    IDENT           reduce using rule 55 (REL_OP -> LESSTHAN .)


state 78

    (56) REL_OP -> GREATERTHAN .

    PLUS            reduce using rule 56 (REL_OP -> GREATERTHAN .)
    MINUS           reduce using rule 56 (REL_OP -> GREATERTHAN .)
    INT_CONSTANT    reduce using rule 56 (REL_OP -> GREATERTHAN .)
    FLOAT_CONSTANT  reduce using rule 56 (REL_OP -> GREATERTHAN .)
    STRING_CONSTANT reduce using rule 56 (REL_OP -> GREATERTHAN .)
    NULL            reduce using rule 56 (REL_OP -> GREATERTHAN .)
    LPARENTHESIS    reduce using rule 56 (REL_OP -> GREATERTHAN .)
    IDENT           reduce using rule 56 (REL_OP -> GREATERTHAN .)


state 79

    (57) REL_OP -> LESSEQUAL .

    PLUS            reduce using rule 57 (REL_OP -> LESSEQUAL .)
    MINUS           reduce using rule 57 (REL_OP -> LESSEQUAL .)
    INT_CONSTANT    reduce using rule 57 (REL_OP -> LESSEQUAL .)
    FLOAT_CONSTANT  reduce using rule 57 (REL_OP -> LESSEQUAL .)
    STRING_CONSTANT reduce using rule 57 (REL_OP -> LESSEQUAL .)
    NULL            reduce using rule 57 (REL_OP -> LESSEQUAL .)
    LPARENTHESIS    reduce using rule 57 (REL_OP -> LESSEQUAL .)
    IDENT           reduce using rule 57 (REL_OP -> LESSEQUAL .)


state 80

    (58) REL_OP -> GREATEREQUAL .

    PLUS            reduce using rule 58 (REL_OP -> GREATEREQUAL .)
    MINUS           reduce using rule 58 (REL_OP -> GREATEREQUAL .)
    INT_CONSTANT    reduce using rule 58 (REL_OP -> GREATEREQUAL .)
    FLOAT_CONSTANT  reduce using rule 58 (REL_OP -> GREATEREQUAL .)
    STRING_CONSTANT reduce using rule 58 (REL_OP -> GREATEREQUAL .)
    NULL            reduce using rule 58 (REL_OP -> GREATEREQUAL .)
    LPARENTHESIS    reduce using rule 58 (REL_OP -> GREATEREQUAL .)
    IDENT           reduce using rule 58 (REL_OP -> GREATEREQUAL .)


state 81

    (59) REL_OP -> EQUAL .

    PLUS            reduce using rule 59 (REL_OP -> EQUAL .)
    MINUS           reduce using rule 59 (REL_OP -> EQUAL .)
    INT_CONSTANT    reduce using rule 59 (REL_OP -> EQUAL .)
    FLOAT_CONSTANT  reduce using rule 59 (REL_OP -> EQUAL .)
    STRING_CONSTANT reduce using rule 59 (REL_OP -> EQUAL .)
    NULL            reduce using rule 59 (REL_OP -> EQUAL .)
    LPARENTHESIS    reduce using rule 59 (REL_OP -> EQUAL .)
    IDENT           reduce using rule 59 (REL_OP -> EQUAL .)


state 82

    (60) REL_OP -> DIFFERENT .

    PLUS            reduce using rule 60 (REL_OP -> DIFFERENT .)
    MINUS           reduce using rule 60 (REL_OP -> DIFFERENT .)
    INT_CONSTANT    reduce using rule 60 (REL_OP -> DIFFERENT .)
    FLOAT_CONSTANT  reduce using rule 60 (REL_OP -> DIFFERENT .)
    STRING_CONSTANT reduce using rule 60 (REL_OP -> DIFFERENT .)
    NULL            reduce using rule 60 (REL_OP -> DIFFERENT .)
    LPARENTHESIS    reduce using rule 60 (REL_OP -> DIFFERENT .)
    IDENT           reduce using rule 60 (REL_OP -> DIFFERENT .)


state 83

    (61) NUMEXPRESSION -> TERM OTHERTERM .

    LESSTHAN        reduce using rule 61 (NUMEXPRESSION -> TERM OTHERTERM .)
    GREATERTHAN     reduce using rule 61 (NUMEXPRESSION -> TERM OTHERTERM .)
    LESSEQUAL       reduce using rule 61 (NUMEXPRESSION -> TERM OTHERTERM .)
    GREATEREQUAL    reduce using rule 61 (NUMEXPRESSION -> TERM OTHERTERM .)
    EQUAL           reduce using rule 61 (NUMEXPRESSION -> TERM OTHERTERM .)
    DIFFERENT       reduce using rule 61 (NUMEXPRESSION -> TERM OTHERTERM .)
    SEMICOLON       reduce using rule 61 (NUMEXPRESSION -> TERM OTHERTERM .)
    RBRACKET        reduce using rule 61 (NUMEXPRESSION -> TERM OTHERTERM .)
    RPARENTHESIS    reduce using rule 61 (NUMEXPRESSION -> TERM OTHERTERM .)


state 84

    (62) OTHERTERM -> PLUS_OR_MINUS . TERM OTHERTERM
    (66) TERM -> . UNARYEXPR OPT_UNARYEXPR
    (72) UNARYEXPR -> . PLUS_OR_MINUS FACTOR
    (73) UNARYEXPR -> . FACTOR
    (64) PLUS_OR_MINUS -> . PLUS
    (65) PLUS_OR_MINUS -> . MINUS
    (74) FACTOR -> . INT_CONSTANT
    (75) FACTOR -> . FLOAT_CONSTANT
    (76) FACTOR -> . STRING_CONSTANT
    (77) FACTOR -> . NULL
    (78) FACTOR -> . LVALUE
    (79) FACTOR -> . LPARENTHESIS NUMEXPRESSION RPARENTHESIS
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    INT_CONSTANT    shift and go to state 52
    FLOAT_CONSTANT  shift and go to state 53
    STRING_CONSTANT shift and go to state 54
    NULL            shift and go to state 55
    LPARENTHESIS    shift and go to state 57
    IDENT           shift and go to state 18

    PLUS_OR_MINUS                  shift and go to state 48
    TERM                           shift and go to state 106
    UNARYEXPR                      shift and go to state 47
    FACTOR                         shift and go to state 49
    LVALUE                         shift and go to state 56

state 85

    (63) OTHERTERM -> empty .

    LESSTHAN        reduce using rule 63 (OTHERTERM -> empty .)
    GREATERTHAN     reduce using rule 63 (OTHERTERM -> empty .)
    LESSEQUAL       reduce using rule 63 (OTHERTERM -> empty .)
    GREATEREQUAL    reduce using rule 63 (OTHERTERM -> empty .)
    EQUAL           reduce using rule 63 (OTHERTERM -> empty .)
    DIFFERENT       reduce using rule 63 (OTHERTERM -> empty .)
    SEMICOLON       reduce using rule 63 (OTHERTERM -> empty .)
    RBRACKET        reduce using rule 63 (OTHERTERM -> empty .)
    RPARENTHESIS    reduce using rule 63 (OTHERTERM -> empty .)


state 86

    (66) TERM -> UNARYEXPR OPT_UNARYEXPR .

    PLUS            reduce using rule 66 (TERM -> UNARYEXPR OPT_UNARYEXPR .)
    MINUS           reduce using rule 66 (TERM -> UNARYEXPR OPT_UNARYEXPR .)
    LESSTHAN        reduce using rule 66 (TERM -> UNARYEXPR OPT_UNARYEXPR .)
    GREATERTHAN     reduce using rule 66 (TERM -> UNARYEXPR OPT_UNARYEXPR .)
    LESSEQUAL       reduce using rule 66 (TERM -> UNARYEXPR OPT_UNARYEXPR .)
    GREATEREQUAL    reduce using rule 66 (TERM -> UNARYEXPR OPT_UNARYEXPR .)
    EQUAL           reduce using rule 66 (TERM -> UNARYEXPR OPT_UNARYEXPR .)
    DIFFERENT       reduce using rule 66 (TERM -> UNARYEXPR OPT_UNARYEXPR .)
    SEMICOLON       reduce using rule 66 (TERM -> UNARYEXPR OPT_UNARYEXPR .)
    RBRACKET        reduce using rule 66 (TERM -> UNARYEXPR OPT_UNARYEXPR .)
    RPARENTHESIS    reduce using rule 66 (TERM -> UNARYEXPR OPT_UNARYEXPR .)


state 87

    (67) OPT_UNARYEXPR -> OPERATOR . UNARYEXPR OPT_UNARYEXPR
    (72) UNARYEXPR -> . PLUS_OR_MINUS FACTOR
    (73) UNARYEXPR -> . FACTOR
    (64) PLUS_OR_MINUS -> . PLUS
    (65) PLUS_OR_MINUS -> . MINUS
    (74) FACTOR -> . INT_CONSTANT
    (75) FACTOR -> . FLOAT_CONSTANT
    (76) FACTOR -> . STRING_CONSTANT
    (77) FACTOR -> . NULL
    (78) FACTOR -> . LVALUE
    (79) FACTOR -> . LPARENTHESIS NUMEXPRESSION RPARENTHESIS
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    INT_CONSTANT    shift and go to state 52
    FLOAT_CONSTANT  shift and go to state 53
    STRING_CONSTANT shift and go to state 54
    NULL            shift and go to state 55
    LPARENTHESIS    shift and go to state 57
    IDENT           shift and go to state 18

    UNARYEXPR                      shift and go to state 107
    PLUS_OR_MINUS                  shift and go to state 48
    FACTOR                         shift and go to state 49
    LVALUE                         shift and go to state 56

state 88

    (68) OPT_UNARYEXPR -> empty .

    PLUS            reduce using rule 68 (OPT_UNARYEXPR -> empty .)
    MINUS           reduce using rule 68 (OPT_UNARYEXPR -> empty .)
    LESSTHAN        reduce using rule 68 (OPT_UNARYEXPR -> empty .)
    GREATERTHAN     reduce using rule 68 (OPT_UNARYEXPR -> empty .)
    LESSEQUAL       reduce using rule 68 (OPT_UNARYEXPR -> empty .)
    GREATEREQUAL    reduce using rule 68 (OPT_UNARYEXPR -> empty .)
    EQUAL           reduce using rule 68 (OPT_UNARYEXPR -> empty .)
    DIFFERENT       reduce using rule 68 (OPT_UNARYEXPR -> empty .)
    SEMICOLON       reduce using rule 68 (OPT_UNARYEXPR -> empty .)
    RBRACKET        reduce using rule 68 (OPT_UNARYEXPR -> empty .)
    RPARENTHESIS    reduce using rule 68 (OPT_UNARYEXPR -> empty .)


state 89

    (69) OPERATOR -> MULT .

    PLUS            reduce using rule 69 (OPERATOR -> MULT .)
    MINUS           reduce using rule 69 (OPERATOR -> MULT .)
    INT_CONSTANT    reduce using rule 69 (OPERATOR -> MULT .)
    FLOAT_CONSTANT  reduce using rule 69 (OPERATOR -> MULT .)
    STRING_CONSTANT reduce using rule 69 (OPERATOR -> MULT .)
    NULL            reduce using rule 69 (OPERATOR -> MULT .)
    LPARENTHESIS    reduce using rule 69 (OPERATOR -> MULT .)
    IDENT           reduce using rule 69 (OPERATOR -> MULT .)


state 90

    (70) OPERATOR -> MOD .

    PLUS            reduce using rule 70 (OPERATOR -> MOD .)
    MINUS           reduce using rule 70 (OPERATOR -> MOD .)
    INT_CONSTANT    reduce using rule 70 (OPERATOR -> MOD .)
    FLOAT_CONSTANT  reduce using rule 70 (OPERATOR -> MOD .)
    STRING_CONSTANT reduce using rule 70 (OPERATOR -> MOD .)
    NULL            reduce using rule 70 (OPERATOR -> MOD .)
    LPARENTHESIS    reduce using rule 70 (OPERATOR -> MOD .)
    IDENT           reduce using rule 70 (OPERATOR -> MOD .)


state 91

    (71) OPERATOR -> DIV .

    PLUS            reduce using rule 71 (OPERATOR -> DIV .)
    MINUS           reduce using rule 71 (OPERATOR -> DIV .)
    INT_CONSTANT    reduce using rule 71 (OPERATOR -> DIV .)
    FLOAT_CONSTANT  reduce using rule 71 (OPERATOR -> DIV .)
    STRING_CONSTANT reduce using rule 71 (OPERATOR -> DIV .)
    NULL            reduce using rule 71 (OPERATOR -> DIV .)
    LPARENTHESIS    reduce using rule 71 (OPERATOR -> DIV .)
    IDENT           reduce using rule 71 (OPERATOR -> DIV .)


state 92

    (72) UNARYEXPR -> PLUS_OR_MINUS FACTOR .

    MULT            reduce using rule 72 (UNARYEXPR -> PLUS_OR_MINUS FACTOR .)
    MOD             reduce using rule 72 (UNARYEXPR -> PLUS_OR_MINUS FACTOR .)
    DIV             reduce using rule 72 (UNARYEXPR -> PLUS_OR_MINUS FACTOR .)
    PLUS            reduce using rule 72 (UNARYEXPR -> PLUS_OR_MINUS FACTOR .)
    MINUS           reduce using rule 72 (UNARYEXPR -> PLUS_OR_MINUS FACTOR .)
    LESSTHAN        reduce using rule 72 (UNARYEXPR -> PLUS_OR_MINUS FACTOR .)
    GREATERTHAN     reduce using rule 72 (UNARYEXPR -> PLUS_OR_MINUS FACTOR .)
    LESSEQUAL       reduce using rule 72 (UNARYEXPR -> PLUS_OR_MINUS FACTOR .)
    GREATEREQUAL    reduce using rule 72 (UNARYEXPR -> PLUS_OR_MINUS FACTOR .)
    EQUAL           reduce using rule 72 (UNARYEXPR -> PLUS_OR_MINUS FACTOR .)
    DIFFERENT       reduce using rule 72 (UNARYEXPR -> PLUS_OR_MINUS FACTOR .)
    SEMICOLON       reduce using rule 72 (UNARYEXPR -> PLUS_OR_MINUS FACTOR .)
    RBRACKET        reduce using rule 72 (UNARYEXPR -> PLUS_OR_MINUS FACTOR .)
    RPARENTHESIS    reduce using rule 72 (UNARYEXPR -> PLUS_OR_MINUS FACTOR .)


state 93

    (79) FACTOR -> LPARENTHESIS NUMEXPRESSION . RPARENTHESIS

    RPARENTHESIS    shift and go to state 108


state 94

    (42) IFSTAT -> IF LPARENTHESIS EXPRESSION . RPARENTHESIS new_scope STATEMENT IFAUX

    RPARENTHESIS    shift and go to state 109


state 95

    (45) FORSTAT -> FOR LPARENTHESIS ATRIBSTAT . SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT

    SEMICOLON       shift and go to state 110


state 96

    (10) FUNCDEF -> DEF IDENT new_scope . LPARENTHESIS PARAMLIST RPARENTHESIS LCURLYBRACKET STATELIST RCURLYBRACKET

    LPARENTHESIS    shift and go to state 111


state 97

    (25) STATEMENT -> new_scope LCURLYBRACKET STATELIST RCURLYBRACKET .

    $end            reduce using rule 25 (STATEMENT -> new_scope LCURLYBRACKET STATELIST RCURLYBRACKET .)
    BREAK           reduce using rule 25 (STATEMENT -> new_scope LCURLYBRACKET STATELIST RCURLYBRACKET .)
    SEMICOLON       reduce using rule 25 (STATEMENT -> new_scope LCURLYBRACKET STATELIST RCURLYBRACKET .)
    PRINT           reduce using rule 25 (STATEMENT -> new_scope LCURLYBRACKET STATELIST RCURLYBRACKET .)
    READ            reduce using rule 25 (STATEMENT -> new_scope LCURLYBRACKET STATELIST RCURLYBRACKET .)
    RETURN          reduce using rule 25 (STATEMENT -> new_scope LCURLYBRACKET STATELIST RCURLYBRACKET .)
    IF              reduce using rule 25 (STATEMENT -> new_scope LCURLYBRACKET STATELIST RCURLYBRACKET .)
    FOR             reduce using rule 25 (STATEMENT -> new_scope LCURLYBRACKET STATELIST RCURLYBRACKET .)
    INT             reduce using rule 25 (STATEMENT -> new_scope LCURLYBRACKET STATELIST RCURLYBRACKET .)
    FLOAT           reduce using rule 25 (STATEMENT -> new_scope LCURLYBRACKET STATELIST RCURLYBRACKET .)
    STRING          reduce using rule 25 (STATEMENT -> new_scope LCURLYBRACKET STATELIST RCURLYBRACKET .)
    IDENT           reduce using rule 25 (STATEMENT -> new_scope LCURLYBRACKET STATELIST RCURLYBRACKET .)
    LCURLYBRACKET   reduce using rule 25 (STATEMENT -> new_scope LCURLYBRACKET STATELIST RCURLYBRACKET .)
    RCURLYBRACKET   reduce using rule 25 (STATEMENT -> new_scope LCURLYBRACKET STATELIST RCURLYBRACKET .)
    ELSE            reduce using rule 25 (STATEMENT -> new_scope LCURLYBRACKET STATELIST RCURLYBRACKET .)


state 98

    (46) STATELIST -> STATEMENT OPT_STATELIST .

    RCURLYBRACKET   reduce using rule 46 (STATELIST -> STATEMENT OPT_STATELIST .)


state 99

    (47) OPT_STATELIST -> STATELIST .

    RCURLYBRACKET   reduce using rule 47 (OPT_STATELIST -> STATELIST .)


state 100

    (48) OPT_STATELIST -> empty .

    RCURLYBRACKET   reduce using rule 48 (OPT_STATELIST -> empty .)


state 101

    (29) OPTIONAL_VEC -> LBRACKET INT_CONSTANT . RBRACKET OPTIONAL_VEC

    RBRACKET        shift and go to state 112


state 102

    (50) OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET . OPT_NUMEXPRESSION
    (50) OPT_NUMEXPRESSION -> . LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION
    (51) OPT_NUMEXPRESSION -> . empty
    (1) empty -> .

    LBRACKET        shift and go to state 41
    ASSIGNMENT      reduce using rule 1 (empty -> .)
    MULT            reduce using rule 1 (empty -> .)
    MOD             reduce using rule 1 (empty -> .)
    DIV             reduce using rule 1 (empty -> .)
    PLUS            reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    LESSTHAN        reduce using rule 1 (empty -> .)
    GREATERTHAN     reduce using rule 1 (empty -> .)
    LESSEQUAL       reduce using rule 1 (empty -> .)
    GREATEREQUAL    reduce using rule 1 (empty -> .)
    EQUAL           reduce using rule 1 (empty -> .)
    DIFFERENT       reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    RPARENTHESIS    reduce using rule 1 (empty -> .)

    OPT_NUMEXPRESSION              shift and go to state 113
    empty                          shift and go to state 42

state 103

    (49) ALLOCEXPRESSION -> NEW DATATYPE . LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION

    LBRACKET        shift and go to state 114


state 104

    (35) FUNCCALL -> IDENT LPARENTHESIS . PARAMLISTCALL RPARENTHESIS
    (36) PARAMLISTCALL -> . IDENT PARAMLISTCALLAUX

    IDENT           shift and go to state 115

    PARAMLISTCALL                  shift and go to state 116

state 105

    (53) OPT_EXPRESSION -> REL_OP NUMEXPRESSION .

    SEMICOLON       reduce using rule 53 (OPT_EXPRESSION -> REL_OP NUMEXPRESSION .)
    RPARENTHESIS    reduce using rule 53 (OPT_EXPRESSION -> REL_OP NUMEXPRESSION .)


state 106

    (62) OTHERTERM -> PLUS_OR_MINUS TERM . OTHERTERM
    (62) OTHERTERM -> . PLUS_OR_MINUS TERM OTHERTERM
    (63) OTHERTERM -> . empty
    (64) PLUS_OR_MINUS -> . PLUS
    (65) PLUS_OR_MINUS -> . MINUS
    (1) empty -> .

    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    LESSTHAN        reduce using rule 1 (empty -> .)
    GREATERTHAN     reduce using rule 1 (empty -> .)
    LESSEQUAL       reduce using rule 1 (empty -> .)
    GREATEREQUAL    reduce using rule 1 (empty -> .)
    EQUAL           reduce using rule 1 (empty -> .)
    DIFFERENT       reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    RPARENTHESIS    reduce using rule 1 (empty -> .)

    PLUS_OR_MINUS                  shift and go to state 84
    OTHERTERM                      shift and go to state 117
    empty                          shift and go to state 85

state 107

    (67) OPT_UNARYEXPR -> OPERATOR UNARYEXPR . OPT_UNARYEXPR
    (67) OPT_UNARYEXPR -> . OPERATOR UNARYEXPR OPT_UNARYEXPR
    (68) OPT_UNARYEXPR -> . empty
    (69) OPERATOR -> . MULT
    (70) OPERATOR -> . MOD
    (71) OPERATOR -> . DIV
    (1) empty -> .

    MULT            shift and go to state 89
    MOD             shift and go to state 90
    DIV             shift and go to state 91
    PLUS            reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    LESSTHAN        reduce using rule 1 (empty -> .)
    GREATERTHAN     reduce using rule 1 (empty -> .)
    LESSEQUAL       reduce using rule 1 (empty -> .)
    GREATEREQUAL    reduce using rule 1 (empty -> .)
    EQUAL           reduce using rule 1 (empty -> .)
    DIFFERENT       reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    RPARENTHESIS    reduce using rule 1 (empty -> .)

    OPERATOR                       shift and go to state 87
    OPT_UNARYEXPR                  shift and go to state 118
    empty                          shift and go to state 88

state 108

    (79) FACTOR -> LPARENTHESIS NUMEXPRESSION RPARENTHESIS .

    MULT            reduce using rule 79 (FACTOR -> LPARENTHESIS NUMEXPRESSION RPARENTHESIS .)
    MOD             reduce using rule 79 (FACTOR -> LPARENTHESIS NUMEXPRESSION RPARENTHESIS .)
    DIV             reduce using rule 79 (FACTOR -> LPARENTHESIS NUMEXPRESSION RPARENTHESIS .)
    PLUS            reduce using rule 79 (FACTOR -> LPARENTHESIS NUMEXPRESSION RPARENTHESIS .)
    MINUS           reduce using rule 79 (FACTOR -> LPARENTHESIS NUMEXPRESSION RPARENTHESIS .)
    LESSTHAN        reduce using rule 79 (FACTOR -> LPARENTHESIS NUMEXPRESSION RPARENTHESIS .)
    GREATERTHAN     reduce using rule 79 (FACTOR -> LPARENTHESIS NUMEXPRESSION RPARENTHESIS .)
    LESSEQUAL       reduce using rule 79 (FACTOR -> LPARENTHESIS NUMEXPRESSION RPARENTHESIS .)
    GREATEREQUAL    reduce using rule 79 (FACTOR -> LPARENTHESIS NUMEXPRESSION RPARENTHESIS .)
    EQUAL           reduce using rule 79 (FACTOR -> LPARENTHESIS NUMEXPRESSION RPARENTHESIS .)
    DIFFERENT       reduce using rule 79 (FACTOR -> LPARENTHESIS NUMEXPRESSION RPARENTHESIS .)
    SEMICOLON       reduce using rule 79 (FACTOR -> LPARENTHESIS NUMEXPRESSION RPARENTHESIS .)
    RBRACKET        reduce using rule 79 (FACTOR -> LPARENTHESIS NUMEXPRESSION RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 79 (FACTOR -> LPARENTHESIS NUMEXPRESSION RPARENTHESIS .)


state 109

    (42) IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS . new_scope STATEMENT IFAUX
    (2) new_scope -> .

    BREAK           reduce using rule 2 (new_scope -> .)
    SEMICOLON       reduce using rule 2 (new_scope -> .)
    PRINT           reduce using rule 2 (new_scope -> .)
    READ            reduce using rule 2 (new_scope -> .)
    RETURN          reduce using rule 2 (new_scope -> .)
    IF              reduce using rule 2 (new_scope -> .)
    FOR             reduce using rule 2 (new_scope -> .)
    INT             reduce using rule 2 (new_scope -> .)
    FLOAT           reduce using rule 2 (new_scope -> .)
    STRING          reduce using rule 2 (new_scope -> .)
    IDENT           reduce using rule 2 (new_scope -> .)
    LCURLYBRACKET   reduce using rule 2 (new_scope -> .)

    new_scope                      shift and go to state 119

state 110

    (45) FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON . EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT
    (52) EXPRESSION -> . NUMEXPRESSION OPT_EXPRESSION
    (61) NUMEXPRESSION -> . TERM OTHERTERM
    (66) TERM -> . UNARYEXPR OPT_UNARYEXPR
    (72) UNARYEXPR -> . PLUS_OR_MINUS FACTOR
    (73) UNARYEXPR -> . FACTOR
    (64) PLUS_OR_MINUS -> . PLUS
    (65) PLUS_OR_MINUS -> . MINUS
    (74) FACTOR -> . INT_CONSTANT
    (75) FACTOR -> . FLOAT_CONSTANT
    (76) FACTOR -> . STRING_CONSTANT
    (77) FACTOR -> . NULL
    (78) FACTOR -> . LVALUE
    (79) FACTOR -> . LPARENTHESIS NUMEXPRESSION RPARENTHESIS
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    INT_CONSTANT    shift and go to state 52
    FLOAT_CONSTANT  shift and go to state 53
    STRING_CONSTANT shift and go to state 54
    NULL            shift and go to state 55
    LPARENTHESIS    shift and go to state 57
    IDENT           shift and go to state 18

    EXPRESSION                     shift and go to state 120
    NUMEXPRESSION                  shift and go to state 45
    TERM                           shift and go to state 46
    UNARYEXPR                      shift and go to state 47
    PLUS_OR_MINUS                  shift and go to state 48
    FACTOR                         shift and go to state 49
    LVALUE                         shift and go to state 56

state 111

    (10) FUNCDEF -> DEF IDENT new_scope LPARENTHESIS . PARAMLIST RPARENTHESIS LCURLYBRACKET STATELIST RCURLYBRACKET
    (11) PARAMLIST -> . DATATYPE IDENT PARAMLISTAUX
    (12) PARAMLIST -> . empty
    (15) DATATYPE -> . INT
    (16) DATATYPE -> . FLOAT
    (17) DATATYPE -> . STRING
    (1) empty -> .

    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    RPARENTHESIS    reduce using rule 1 (empty -> .)

    PARAMLIST                      shift and go to state 121
    DATATYPE                       shift and go to state 122
    empty                          shift and go to state 123

state 112

    (29) OPTIONAL_VEC -> LBRACKET INT_CONSTANT RBRACKET . OPTIONAL_VEC
    (29) OPTIONAL_VEC -> . LBRACKET INT_CONSTANT RBRACKET OPTIONAL_VEC
    (30) OPTIONAL_VEC -> . empty
    (1) empty -> .

    LBRACKET        shift and go to state 65
    SEMICOLON       reduce using rule 1 (empty -> .)

    OPTIONAL_VEC                   shift and go to state 124
    empty                          shift and go to state 66

state 113

    (50) OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .

    ASSIGNMENT      reduce using rule 50 (OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .)
    MULT            reduce using rule 50 (OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .)
    MOD             reduce using rule 50 (OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .)
    DIV             reduce using rule 50 (OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .)
    PLUS            reduce using rule 50 (OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .)
    MINUS           reduce using rule 50 (OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .)
    LESSTHAN        reduce using rule 50 (OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .)
    GREATERTHAN     reduce using rule 50 (OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .)
    LESSEQUAL       reduce using rule 50 (OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .)
    GREATEREQUAL    reduce using rule 50 (OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .)
    EQUAL           reduce using rule 50 (OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .)
    DIFFERENT       reduce using rule 50 (OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .)
    SEMICOLON       reduce using rule 50 (OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .)
    RBRACKET        reduce using rule 50 (OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .)
    RPARENTHESIS    reduce using rule 50 (OPT_NUMEXPRESSION -> LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .)


state 114

    (49) ALLOCEXPRESSION -> NEW DATATYPE LBRACKET . NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION
    (61) NUMEXPRESSION -> . TERM OTHERTERM
    (66) TERM -> . UNARYEXPR OPT_UNARYEXPR
    (72) UNARYEXPR -> . PLUS_OR_MINUS FACTOR
    (73) UNARYEXPR -> . FACTOR
    (64) PLUS_OR_MINUS -> . PLUS
    (65) PLUS_OR_MINUS -> . MINUS
    (74) FACTOR -> . INT_CONSTANT
    (75) FACTOR -> . FLOAT_CONSTANT
    (76) FACTOR -> . STRING_CONSTANT
    (77) FACTOR -> . NULL
    (78) FACTOR -> . LVALUE
    (79) FACTOR -> . LPARENTHESIS NUMEXPRESSION RPARENTHESIS
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    INT_CONSTANT    shift and go to state 52
    FLOAT_CONSTANT  shift and go to state 53
    STRING_CONSTANT shift and go to state 54
    NULL            shift and go to state 55
    LPARENTHESIS    shift and go to state 57
    IDENT           shift and go to state 18

    NUMEXPRESSION                  shift and go to state 125
    TERM                           shift and go to state 46
    UNARYEXPR                      shift and go to state 47
    PLUS_OR_MINUS                  shift and go to state 48
    FACTOR                         shift and go to state 49
    LVALUE                         shift and go to state 56

state 115

    (36) PARAMLISTCALL -> IDENT . PARAMLISTCALLAUX
    (37) PARAMLISTCALLAUX -> . COMMA PARAMLISTCALL
    (38) PARAMLISTCALLAUX -> . empty
    (1) empty -> .

    COMMA           shift and go to state 127
    RPARENTHESIS    reduce using rule 1 (empty -> .)

    PARAMLISTCALLAUX               shift and go to state 126
    empty                          shift and go to state 128

state 116

    (35) FUNCCALL -> IDENT LPARENTHESIS PARAMLISTCALL . RPARENTHESIS

    RPARENTHESIS    shift and go to state 129


state 117

    (62) OTHERTERM -> PLUS_OR_MINUS TERM OTHERTERM .

    LESSTHAN        reduce using rule 62 (OTHERTERM -> PLUS_OR_MINUS TERM OTHERTERM .)
    GREATERTHAN     reduce using rule 62 (OTHERTERM -> PLUS_OR_MINUS TERM OTHERTERM .)
    LESSEQUAL       reduce using rule 62 (OTHERTERM -> PLUS_OR_MINUS TERM OTHERTERM .)
    GREATEREQUAL    reduce using rule 62 (OTHERTERM -> PLUS_OR_MINUS TERM OTHERTERM .)
    EQUAL           reduce using rule 62 (OTHERTERM -> PLUS_OR_MINUS TERM OTHERTERM .)
    DIFFERENT       reduce using rule 62 (OTHERTERM -> PLUS_OR_MINUS TERM OTHERTERM .)
    SEMICOLON       reduce using rule 62 (OTHERTERM -> PLUS_OR_MINUS TERM OTHERTERM .)
    RBRACKET        reduce using rule 62 (OTHERTERM -> PLUS_OR_MINUS TERM OTHERTERM .)
    RPARENTHESIS    reduce using rule 62 (OTHERTERM -> PLUS_OR_MINUS TERM OTHERTERM .)


state 118

    (67) OPT_UNARYEXPR -> OPERATOR UNARYEXPR OPT_UNARYEXPR .

    PLUS            reduce using rule 67 (OPT_UNARYEXPR -> OPERATOR UNARYEXPR OPT_UNARYEXPR .)
    MINUS           reduce using rule 67 (OPT_UNARYEXPR -> OPERATOR UNARYEXPR OPT_UNARYEXPR .)
    LESSTHAN        reduce using rule 67 (OPT_UNARYEXPR -> OPERATOR UNARYEXPR OPT_UNARYEXPR .)
    GREATERTHAN     reduce using rule 67 (OPT_UNARYEXPR -> OPERATOR UNARYEXPR OPT_UNARYEXPR .)
    LESSEQUAL       reduce using rule 67 (OPT_UNARYEXPR -> OPERATOR UNARYEXPR OPT_UNARYEXPR .)
    GREATEREQUAL    reduce using rule 67 (OPT_UNARYEXPR -> OPERATOR UNARYEXPR OPT_UNARYEXPR .)
    EQUAL           reduce using rule 67 (OPT_UNARYEXPR -> OPERATOR UNARYEXPR OPT_UNARYEXPR .)
    DIFFERENT       reduce using rule 67 (OPT_UNARYEXPR -> OPERATOR UNARYEXPR OPT_UNARYEXPR .)
    SEMICOLON       reduce using rule 67 (OPT_UNARYEXPR -> OPERATOR UNARYEXPR OPT_UNARYEXPR .)
    RBRACKET        reduce using rule 67 (OPT_UNARYEXPR -> OPERATOR UNARYEXPR OPT_UNARYEXPR .)
    RPARENTHESIS    reduce using rule 67 (OPT_UNARYEXPR -> OPERATOR UNARYEXPR OPT_UNARYEXPR .)


state 119

    (42) IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope . STATEMENT IFAUX
    (18) STATEMENT -> . VARDECL SEMICOLON
    (19) STATEMENT -> . ATRIBSTAT SEMICOLON
    (20) STATEMENT -> . PRINTSTAT SEMICOLON
    (21) STATEMENT -> . READSTAT SEMICOLON
    (22) STATEMENT -> . RETURNSTAT SEMICOLON
    (23) STATEMENT -> . IFSTAT
    (24) STATEMENT -> . FORSTAT
    (25) STATEMENT -> . new_scope LCURLYBRACKET STATELIST RCURLYBRACKET
    (26) STATEMENT -> . BREAK SEMICOLON
    (27) STATEMENT -> . SEMICOLON
    (28) VARDECL -> . DATATYPE IDENT OPTIONAL_VEC
    (31) ATRIBSTAT -> . LVALUE ASSIGNMENT R_ATRIB
    (39) PRINTSTAT -> . PRINT EXPRESSION
    (40) READSTAT -> . READ LVALUE
    (41) RETURNSTAT -> . RETURN
    (42) IFSTAT -> . IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX
    (45) FORSTAT -> . FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT
    (2) new_scope -> .
    (15) DATATYPE -> . INT
    (16) DATATYPE -> . FLOAT
    (17) DATATYPE -> . STRING
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    BREAK           shift and go to state 15
    SEMICOLON       shift and go to state 8
    PRINT           shift and go to state 20
    READ            shift and go to state 21
    RETURN          shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    LCURLYBRACKET   reduce using rule 2 (new_scope -> .)
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENT           shift and go to state 18

    new_scope                      shift and go to state 4
    STATEMENT                      shift and go to state 130
    VARDECL                        shift and go to state 7
    ATRIBSTAT                      shift and go to state 9
    PRINTSTAT                      shift and go to state 10
    READSTAT                       shift and go to state 11
    RETURNSTAT                     shift and go to state 12
    IFSTAT                         shift and go to state 13
    FORSTAT                        shift and go to state 14
    DATATYPE                       shift and go to state 17
    LVALUE                         shift and go to state 19

state 120

    (45) FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION . SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT

    SEMICOLON       shift and go to state 131


state 121

    (10) FUNCDEF -> DEF IDENT new_scope LPARENTHESIS PARAMLIST . RPARENTHESIS LCURLYBRACKET STATELIST RCURLYBRACKET

    RPARENTHESIS    shift and go to state 132


state 122

    (11) PARAMLIST -> DATATYPE . IDENT PARAMLISTAUX

    IDENT           shift and go to state 133


state 123

    (12) PARAMLIST -> empty .

    RPARENTHESIS    reduce using rule 12 (PARAMLIST -> empty .)


state 124

    (29) OPTIONAL_VEC -> LBRACKET INT_CONSTANT RBRACKET OPTIONAL_VEC .

    SEMICOLON       reduce using rule 29 (OPTIONAL_VEC -> LBRACKET INT_CONSTANT RBRACKET OPTIONAL_VEC .)


state 125

    (49) ALLOCEXPRESSION -> NEW DATATYPE LBRACKET NUMEXPRESSION . RBRACKET OPT_NUMEXPRESSION

    RBRACKET        shift and go to state 134


state 126

    (36) PARAMLISTCALL -> IDENT PARAMLISTCALLAUX .

    RPARENTHESIS    reduce using rule 36 (PARAMLISTCALL -> IDENT PARAMLISTCALLAUX .)


state 127

    (37) PARAMLISTCALLAUX -> COMMA . PARAMLISTCALL
    (36) PARAMLISTCALL -> . IDENT PARAMLISTCALLAUX

    IDENT           shift and go to state 115

    PARAMLISTCALL                  shift and go to state 135

state 128

    (38) PARAMLISTCALLAUX -> empty .

    RPARENTHESIS    reduce using rule 38 (PARAMLISTCALLAUX -> empty .)


state 129

    (35) FUNCCALL -> IDENT LPARENTHESIS PARAMLISTCALL RPARENTHESIS .

    SEMICOLON       reduce using rule 35 (FUNCCALL -> IDENT LPARENTHESIS PARAMLISTCALL RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 35 (FUNCCALL -> IDENT LPARENTHESIS PARAMLISTCALL RPARENTHESIS .)


state 130

    (42) IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT . IFAUX
    (43) IFAUX -> . ELSE new_scope STATEMENT
    (44) IFAUX -> . empty
    (1) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 137
    $end            reduce using rule 1 (empty -> .)
    BREAK           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    READ            reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    STRING          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    LCURLYBRACKET   reduce using rule 1 (empty -> .)
    RCURLYBRACKET   reduce using rule 1 (empty -> .)

  ! ELSE            [ reduce using rule 1 (empty -> .) ]

    IFAUX                          shift and go to state 136
    empty                          shift and go to state 138

state 131

    (45) FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON . ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT
    (31) ATRIBSTAT -> . LVALUE ASSIGNMENT R_ATRIB
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    IDENT           shift and go to state 18

    ATRIBSTAT                      shift and go to state 139
    LVALUE                         shift and go to state 19

state 132

    (10) FUNCDEF -> DEF IDENT new_scope LPARENTHESIS PARAMLIST RPARENTHESIS . LCURLYBRACKET STATELIST RCURLYBRACKET

    LCURLYBRACKET   shift and go to state 140


state 133

    (11) PARAMLIST -> DATATYPE IDENT . PARAMLISTAUX
    (13) PARAMLISTAUX -> . COMMA PARAMLIST
    (14) PARAMLISTAUX -> . empty
    (1) empty -> .

    COMMA           shift and go to state 142
    RPARENTHESIS    reduce using rule 1 (empty -> .)

    PARAMLISTAUX                   shift and go to state 141
    empty                          shift and go to state 143

state 134

    (49) ALLOCEXPRESSION -> NEW DATATYPE LBRACKET NUMEXPRESSION RBRACKET . OPT_NUMEXPRESSION
    (50) OPT_NUMEXPRESSION -> . LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION
    (51) OPT_NUMEXPRESSION -> . empty
    (1) empty -> .

    LBRACKET        shift and go to state 41
    SEMICOLON       reduce using rule 1 (empty -> .)
    RPARENTHESIS    reduce using rule 1 (empty -> .)

    OPT_NUMEXPRESSION              shift and go to state 144
    empty                          shift and go to state 42

state 135

    (37) PARAMLISTCALLAUX -> COMMA PARAMLISTCALL .

    RPARENTHESIS    reduce using rule 37 (PARAMLISTCALLAUX -> COMMA PARAMLISTCALL .)


state 136

    (42) IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX .

    $end            reduce using rule 42 (IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX .)
    BREAK           reduce using rule 42 (IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX .)
    SEMICOLON       reduce using rule 42 (IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX .)
    PRINT           reduce using rule 42 (IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX .)
    READ            reduce using rule 42 (IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX .)
    RETURN          reduce using rule 42 (IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX .)
    IF              reduce using rule 42 (IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX .)
    FOR             reduce using rule 42 (IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX .)
    INT             reduce using rule 42 (IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX .)
    FLOAT           reduce using rule 42 (IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX .)
    STRING          reduce using rule 42 (IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX .)
    IDENT           reduce using rule 42 (IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX .)
    LCURLYBRACKET   reduce using rule 42 (IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX .)
    RCURLYBRACKET   reduce using rule 42 (IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX .)
    ELSE            reduce using rule 42 (IFSTAT -> IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX .)


state 137

    (43) IFAUX -> ELSE . new_scope STATEMENT
    (2) new_scope -> .

    BREAK           reduce using rule 2 (new_scope -> .)
    SEMICOLON       reduce using rule 2 (new_scope -> .)
    PRINT           reduce using rule 2 (new_scope -> .)
    READ            reduce using rule 2 (new_scope -> .)
    RETURN          reduce using rule 2 (new_scope -> .)
    IF              reduce using rule 2 (new_scope -> .)
    FOR             reduce using rule 2 (new_scope -> .)
    INT             reduce using rule 2 (new_scope -> .)
    FLOAT           reduce using rule 2 (new_scope -> .)
    STRING          reduce using rule 2 (new_scope -> .)
    IDENT           reduce using rule 2 (new_scope -> .)
    LCURLYBRACKET   reduce using rule 2 (new_scope -> .)

    new_scope                      shift and go to state 145

state 138

    (44) IFAUX -> empty .

    ELSE            reduce using rule 44 (IFAUX -> empty .)
    $end            reduce using rule 44 (IFAUX -> empty .)
    BREAK           reduce using rule 44 (IFAUX -> empty .)
    SEMICOLON       reduce using rule 44 (IFAUX -> empty .)
    PRINT           reduce using rule 44 (IFAUX -> empty .)
    READ            reduce using rule 44 (IFAUX -> empty .)
    RETURN          reduce using rule 44 (IFAUX -> empty .)
    IF              reduce using rule 44 (IFAUX -> empty .)
    FOR             reduce using rule 44 (IFAUX -> empty .)
    INT             reduce using rule 44 (IFAUX -> empty .)
    FLOAT           reduce using rule 44 (IFAUX -> empty .)
    STRING          reduce using rule 44 (IFAUX -> empty .)
    IDENT           reduce using rule 44 (IFAUX -> empty .)
    LCURLYBRACKET   reduce using rule 44 (IFAUX -> empty .)
    RCURLYBRACKET   reduce using rule 44 (IFAUX -> empty .)


state 139

    (45) FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT . RPARENTHESIS new_scope_loop STATEMENT

    RPARENTHESIS    shift and go to state 146


state 140

    (10) FUNCDEF -> DEF IDENT new_scope LPARENTHESIS PARAMLIST RPARENTHESIS LCURLYBRACKET . STATELIST RCURLYBRACKET
    (46) STATELIST -> . STATEMENT OPT_STATELIST
    (18) STATEMENT -> . VARDECL SEMICOLON
    (19) STATEMENT -> . ATRIBSTAT SEMICOLON
    (20) STATEMENT -> . PRINTSTAT SEMICOLON
    (21) STATEMENT -> . READSTAT SEMICOLON
    (22) STATEMENT -> . RETURNSTAT SEMICOLON
    (23) STATEMENT -> . IFSTAT
    (24) STATEMENT -> . FORSTAT
    (25) STATEMENT -> . new_scope LCURLYBRACKET STATELIST RCURLYBRACKET
    (26) STATEMENT -> . BREAK SEMICOLON
    (27) STATEMENT -> . SEMICOLON
    (28) VARDECL -> . DATATYPE IDENT OPTIONAL_VEC
    (31) ATRIBSTAT -> . LVALUE ASSIGNMENT R_ATRIB
    (39) PRINTSTAT -> . PRINT EXPRESSION
    (40) READSTAT -> . READ LVALUE
    (41) RETURNSTAT -> . RETURN
    (42) IFSTAT -> . IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX
    (45) FORSTAT -> . FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT
    (2) new_scope -> .
    (15) DATATYPE -> . INT
    (16) DATATYPE -> . FLOAT
    (17) DATATYPE -> . STRING
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    BREAK           shift and go to state 15
    SEMICOLON       shift and go to state 8
    PRINT           shift and go to state 20
    READ            shift and go to state 21
    RETURN          shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    LCURLYBRACKET   reduce using rule 2 (new_scope -> .)
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENT           shift and go to state 18

    new_scope                      shift and go to state 4
    STATELIST                      shift and go to state 147
    STATEMENT                      shift and go to state 63
    VARDECL                        shift and go to state 7
    ATRIBSTAT                      shift and go to state 9
    PRINTSTAT                      shift and go to state 10
    READSTAT                       shift and go to state 11
    RETURNSTAT                     shift and go to state 12
    IFSTAT                         shift and go to state 13
    FORSTAT                        shift and go to state 14
    DATATYPE                       shift and go to state 17
    LVALUE                         shift and go to state 19

state 141

    (11) PARAMLIST -> DATATYPE IDENT PARAMLISTAUX .

    RPARENTHESIS    reduce using rule 11 (PARAMLIST -> DATATYPE IDENT PARAMLISTAUX .)


state 142

    (13) PARAMLISTAUX -> COMMA . PARAMLIST
    (11) PARAMLIST -> . DATATYPE IDENT PARAMLISTAUX
    (12) PARAMLIST -> . empty
    (15) DATATYPE -> . INT
    (16) DATATYPE -> . FLOAT
    (17) DATATYPE -> . STRING
    (1) empty -> .

    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    RPARENTHESIS    reduce using rule 1 (empty -> .)

    PARAMLIST                      shift and go to state 148
    DATATYPE                       shift and go to state 122
    empty                          shift and go to state 123

state 143

    (14) PARAMLISTAUX -> empty .

    RPARENTHESIS    reduce using rule 14 (PARAMLISTAUX -> empty .)


state 144

    (49) ALLOCEXPRESSION -> NEW DATATYPE LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .

    SEMICOLON       reduce using rule 49 (ALLOCEXPRESSION -> NEW DATATYPE LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .)
    RPARENTHESIS    reduce using rule 49 (ALLOCEXPRESSION -> NEW DATATYPE LBRACKET NUMEXPRESSION RBRACKET OPT_NUMEXPRESSION .)


state 145

    (43) IFAUX -> ELSE new_scope . STATEMENT
    (18) STATEMENT -> . VARDECL SEMICOLON
    (19) STATEMENT -> . ATRIBSTAT SEMICOLON
    (20) STATEMENT -> . PRINTSTAT SEMICOLON
    (21) STATEMENT -> . READSTAT SEMICOLON
    (22) STATEMENT -> . RETURNSTAT SEMICOLON
    (23) STATEMENT -> . IFSTAT
    (24) STATEMENT -> . FORSTAT
    (25) STATEMENT -> . new_scope LCURLYBRACKET STATELIST RCURLYBRACKET
    (26) STATEMENT -> . BREAK SEMICOLON
    (27) STATEMENT -> . SEMICOLON
    (28) VARDECL -> . DATATYPE IDENT OPTIONAL_VEC
    (31) ATRIBSTAT -> . LVALUE ASSIGNMENT R_ATRIB
    (39) PRINTSTAT -> . PRINT EXPRESSION
    (40) READSTAT -> . READ LVALUE
    (41) RETURNSTAT -> . RETURN
    (42) IFSTAT -> . IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX
    (45) FORSTAT -> . FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT
    (2) new_scope -> .
    (15) DATATYPE -> . INT
    (16) DATATYPE -> . FLOAT
    (17) DATATYPE -> . STRING
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    BREAK           shift and go to state 15
    SEMICOLON       shift and go to state 8
    PRINT           shift and go to state 20
    READ            shift and go to state 21
    RETURN          shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    LCURLYBRACKET   reduce using rule 2 (new_scope -> .)
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENT           shift and go to state 18

    new_scope                      shift and go to state 4
    STATEMENT                      shift and go to state 149
    VARDECL                        shift and go to state 7
    ATRIBSTAT                      shift and go to state 9
    PRINTSTAT                      shift and go to state 10
    READSTAT                       shift and go to state 11
    RETURNSTAT                     shift and go to state 12
    IFSTAT                         shift and go to state 13
    FORSTAT                        shift and go to state 14
    DATATYPE                       shift and go to state 17
    LVALUE                         shift and go to state 19

state 146

    (45) FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS . new_scope_loop STATEMENT
    (3) new_scope_loop -> .

    BREAK           reduce using rule 3 (new_scope_loop -> .)
    SEMICOLON       reduce using rule 3 (new_scope_loop -> .)
    PRINT           reduce using rule 3 (new_scope_loop -> .)
    READ            reduce using rule 3 (new_scope_loop -> .)
    RETURN          reduce using rule 3 (new_scope_loop -> .)
    IF              reduce using rule 3 (new_scope_loop -> .)
    FOR             reduce using rule 3 (new_scope_loop -> .)
    INT             reduce using rule 3 (new_scope_loop -> .)
    FLOAT           reduce using rule 3 (new_scope_loop -> .)
    STRING          reduce using rule 3 (new_scope_loop -> .)
    IDENT           reduce using rule 3 (new_scope_loop -> .)
    LCURLYBRACKET   reduce using rule 3 (new_scope_loop -> .)

    new_scope_loop                 shift and go to state 150

state 147

    (10) FUNCDEF -> DEF IDENT new_scope LPARENTHESIS PARAMLIST RPARENTHESIS LCURLYBRACKET STATELIST . RCURLYBRACKET

    RCURLYBRACKET   shift and go to state 151


state 148

    (13) PARAMLISTAUX -> COMMA PARAMLIST .

    RPARENTHESIS    reduce using rule 13 (PARAMLISTAUX -> COMMA PARAMLIST .)


state 149

    (43) IFAUX -> ELSE new_scope STATEMENT .

    ELSE            reduce using rule 43 (IFAUX -> ELSE new_scope STATEMENT .)
    $end            reduce using rule 43 (IFAUX -> ELSE new_scope STATEMENT .)
    BREAK           reduce using rule 43 (IFAUX -> ELSE new_scope STATEMENT .)
    SEMICOLON       reduce using rule 43 (IFAUX -> ELSE new_scope STATEMENT .)
    PRINT           reduce using rule 43 (IFAUX -> ELSE new_scope STATEMENT .)
    READ            reduce using rule 43 (IFAUX -> ELSE new_scope STATEMENT .)
    RETURN          reduce using rule 43 (IFAUX -> ELSE new_scope STATEMENT .)
    IF              reduce using rule 43 (IFAUX -> ELSE new_scope STATEMENT .)
    FOR             reduce using rule 43 (IFAUX -> ELSE new_scope STATEMENT .)
    INT             reduce using rule 43 (IFAUX -> ELSE new_scope STATEMENT .)
    FLOAT           reduce using rule 43 (IFAUX -> ELSE new_scope STATEMENT .)
    STRING          reduce using rule 43 (IFAUX -> ELSE new_scope STATEMENT .)
    IDENT           reduce using rule 43 (IFAUX -> ELSE new_scope STATEMENT .)
    LCURLYBRACKET   reduce using rule 43 (IFAUX -> ELSE new_scope STATEMENT .)
    RCURLYBRACKET   reduce using rule 43 (IFAUX -> ELSE new_scope STATEMENT .)


state 150

    (45) FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop . STATEMENT
    (18) STATEMENT -> . VARDECL SEMICOLON
    (19) STATEMENT -> . ATRIBSTAT SEMICOLON
    (20) STATEMENT -> . PRINTSTAT SEMICOLON
    (21) STATEMENT -> . READSTAT SEMICOLON
    (22) STATEMENT -> . RETURNSTAT SEMICOLON
    (23) STATEMENT -> . IFSTAT
    (24) STATEMENT -> . FORSTAT
    (25) STATEMENT -> . new_scope LCURLYBRACKET STATELIST RCURLYBRACKET
    (26) STATEMENT -> . BREAK SEMICOLON
    (27) STATEMENT -> . SEMICOLON
    (28) VARDECL -> . DATATYPE IDENT OPTIONAL_VEC
    (31) ATRIBSTAT -> . LVALUE ASSIGNMENT R_ATRIB
    (39) PRINTSTAT -> . PRINT EXPRESSION
    (40) READSTAT -> . READ LVALUE
    (41) RETURNSTAT -> . RETURN
    (42) IFSTAT -> . IF LPARENTHESIS EXPRESSION RPARENTHESIS new_scope STATEMENT IFAUX
    (45) FORSTAT -> . FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT
    (2) new_scope -> .
    (15) DATATYPE -> . INT
    (16) DATATYPE -> . FLOAT
    (17) DATATYPE -> . STRING
    (80) LVALUE -> . IDENT OPT_NUMEXPRESSION

    BREAK           shift and go to state 15
    SEMICOLON       shift and go to state 8
    PRINT           shift and go to state 20
    READ            shift and go to state 21
    RETURN          shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    LCURLYBRACKET   reduce using rule 2 (new_scope -> .)
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENT           shift and go to state 18

    ATRIBSTAT                      shift and go to state 9
    STATEMENT                      shift and go to state 152
    VARDECL                        shift and go to state 7
    PRINTSTAT                      shift and go to state 10
    READSTAT                       shift and go to state 11
    RETURNSTAT                     shift and go to state 12
    IFSTAT                         shift and go to state 13
    FORSTAT                        shift and go to state 14
    new_scope                      shift and go to state 4
    DATATYPE                       shift and go to state 17
    LVALUE                         shift and go to state 19

state 151

    (10) FUNCDEF -> DEF IDENT new_scope LPARENTHESIS PARAMLIST RPARENTHESIS LCURLYBRACKET STATELIST RCURLYBRACKET .

    DEF             reduce using rule 10 (FUNCDEF -> DEF IDENT new_scope LPARENTHESIS PARAMLIST RPARENTHESIS LCURLYBRACKET STATELIST RCURLYBRACKET .)
    $end            reduce using rule 10 (FUNCDEF -> DEF IDENT new_scope LPARENTHESIS PARAMLIST RPARENTHESIS LCURLYBRACKET STATELIST RCURLYBRACKET .)


state 152

    (45) FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT .

    $end            reduce using rule 45 (FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT .)
    BREAK           reduce using rule 45 (FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT .)
    SEMICOLON       reduce using rule 45 (FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT .)
    PRINT           reduce using rule 45 (FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT .)
    READ            reduce using rule 45 (FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT .)
    RETURN          reduce using rule 45 (FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT .)
    IF              reduce using rule 45 (FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT .)
    FOR             reduce using rule 45 (FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT .)
    INT             reduce using rule 45 (FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT .)
    FLOAT           reduce using rule 45 (FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT .)
    STRING          reduce using rule 45 (FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT .)
    IDENT           reduce using rule 45 (FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT .)
    LCURLYBRACKET   reduce using rule 45 (FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT .)
    RCURLYBRACKET   reduce using rule 45 (FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT .)
    ELSE            reduce using rule 45 (FORSTAT -> FOR LPARENTHESIS ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPARENTHESIS new_scope_loop STATEMENT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 130 resolved as shift
